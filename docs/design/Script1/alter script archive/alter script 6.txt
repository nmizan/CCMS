USE [CCMS]
GO




-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 19-Jun-13
-- Description:	Get detail from ncollection table
-- =============================================
CREATE PROCEDURE [dbo].[CMS_NCollection_GetDetailList]	
	@AUTH_FLAG	bit
AS
BEGIN	
		
	SET NOCOUNT ON;

	IF @AUTH_FLAG=0
		BEGIN						
			SELECT nch.*,'S' = 'U',cc.CHECK_NO, cc.AMOUNT AS CHECK_AMOUNT,cc.D_CODE			 
				FROM NCOLLECTION_HIST nch
				LEFT OUTER JOIN CCHECK cc
				ON cc.NONZONE_REF=nch.NONZONE_REF
				WHERE nch.IS_AUTH=0
				ORDER BY nch.NONZONE_REF;
		END;
	ELSE
		BEGIN
			
			SELECT nc.*,'S' = 'A',cc.CHECK_NO, cc.AMOUNT AS CHECK_AMOUNT,cc.D_CODE	
				FROM NCOLLECTION_HIST nc
				LEFT OUTER JOIN CCHECK cc
				ON cc.NONZONE_REF=nc.NONZONE_REF
				WHERE nc.IS_AUTH=0
				ORDER BY nc.NONZONE_REF;
									
		END;	
	   
END

GO


GRANT EXECUTE ON [dbo].[CMS_NCollection_GetDetailList] TO [ccms_sp_only]

GO



ALTER VIEW [dbo].[V_ANY_RETURN]
as
(
	SELECT cc.*,cl.ACC_NO,cl.ACC_NAME,cl.MAIL_ADD,l.LOCATION_NAME,rr.REJECT_REASON,
		b.BANK_NAME, br.BRANCH_NAME, CONVERT(datetime,CONVERT(varchar(12),nc.INPUT_DATETIME))  AS RET_DATE
		FROM CCHECK cc
		INNER JOIN NCOLLECTION nc
		ON nc.NONZONE_REF=cc.NONZONE_REF
		INNER JOIN RETURN_REJECT rr
		ON cc.RTN_CODE=rr.REJECT_CODE
		LEFT OUTER JOIN CLIENT cl
		ON cc.CLIENT_CODE=cl.CLIENT_CODE
		LEFT OUTER JOIN LOCATION l
		ON l.LOCATION_CODE=cc.DLOCATION_CODE
		LEFT OUTER JOIN BANK b 
		ON b.BANK_CODE=cc.DRAWEE_BANK_CODE
		LEFT OUTER JOIN BRANCH br
		ON b.BANK_CODE=br.BANK_CODE AND br.BRANCH_CODE=cc.BRANCH_CODE
		WHERE CC.RTN_STATUS='R'
)

GO

ALTER VIEW [dbo].[V_DD_FUNDING]
as
(
	SELECT DD.D_CODE AS DEPOSIT_NO, DD.DD_NO, DD.AMOUNT,DD.DD_DATE,
		b.BANK_NAME as DRAWEE_BANK, br.BRANCH_NAME AS DRAWEE_BRANCH ,cc.CLIENT_CODE
		FROM DD 
		INNER JOIN BANK b
		ON b.BANK_CODE=dd.DRAWER_BANKCODE
		INNER JOIN BRANCH br
		ON br.BANK_CODE=dd.DRAWER_BANKCODE AND br.BRANCH_CODE=dd.DRAWER_BRANCHCODE
		INNER JOIN NCOLLECTION nc
		ON DD.D_CODE+RIGHT(('000'+CONVERT(VARCHAR,DD.SLNO)),3) =nc.DDREFNO
		INNER JOIN CCHECK cc
		ON nc.NONZONE_REF=cc.NONZONE_REF
		GROUP BY DD.D_CODE, DD.DD_NO, DD.AMOUNT,DD.DD_DATE,
		b.BANK_NAME, br.BRANCH_NAME,cc.CLIENT_CODE

)

GO





ALTER VIEW [dbo].[V_SPEEDCASH_DETAIL]
as
(
	SELECT ds.*,dc.ENTRY_DATE, cl.ACC_NO,cl.ACC_NAME,l.LOCATION_NAME,b.BANK_NAME
		FROM DSCHEDULE ds
		INNER JOIN DCOLLECTED dc
		ON dc.DS_CODE=ds.DS_CODE
		LEFT OUTER JOIN CLIENT cl
		ON ds.CLIENT_CODE=cl.CLIENT_CODE
		LEFT OUTER JOIN LOCATION l
		ON l.LOCATION_CODE=ds.LOCATION_CODE
		LEFT OUTER JOIN BANK b
		ON b.BANK_CODE = ds.CORR_BANK_CODE
)

GO






ALTER VIEW [dbo].[V_SPEED_DEPOSIT]
as
(
	SELECT ds.*,cdd.SLNO,cdd.AMOUNT,cdd.CHECK_NO,cdd.CHECK_REF,cdd.DRAWER,cdd.SLIP_DATE,
		cl.ACC_NO,cl.ACC_NAME,cl.MAIL_ADD,l.LOCATION_NAME,b.BANK_NAME,db.BANK_NAME AS DRAWEE_BANK_NAME
		FROM DSCHEDULE ds
		INNER JOIN CSD_DET cdd
		ON cdd.D_CODE=ds.D_CODE
		LEFT OUTER JOIN CLIENT cl
		ON ds.CLIENT_CODE=cl.CLIENT_CODE
		LEFT OUTER JOIN LOCATION l
		ON l.LOCATION_CODE=ds.LOCATION_CODE
		LEFT OUTER JOIN BANK b
		ON b.BANK_CODE = ds.CORR_BANK_CODE
		LEFT OUTER JOIN BANK db
		ON db.BANK_CODE=cdd.DRAWEE_BANK_CODE

)

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 19-May-13
-- Description:	Get dschedule for mismatch total check no/check amount/cash Amount
-- =============================================
ALTER PROCEDURE [dbo].[CMS_DSchedule_GetMismatchDetail]			
AS
BEGIN	
		
	SET NOCOUNT ON;

	SELECT dc.*
		FROM DCOLLECTED dc INNER JOIN
		(SELECT DS_CODE,SUM(CITICASH_AMOUNT) AS TOTCASH,SUM(CITICHECK_AMOUNT) AS TOTCHECK,
		SUM(NO_CHECK) AS TOTCHECKNO
		FROM DSCHEDULE ds
		WHERE ds.DS_CODE IN (SELECT DISTINCT DS_CODE FROM DSCHEDULE a 
		WHERE a.FILENAME IS NULL AND (a.CHECKED=0 OR a.CHECKED IS NULL))
		GROUP BY DS_CODE) b
		ON dc.DS_CODE=b.DS_CODE
		WHERE dc.STATUS='L' 
		AND (dc.TOTAL_NOCHK<>b.TOTCHECKNO OR dc.TOTAL_CHKAMT<>TOTCHECK OR dc.TOTAL_CASHAMT<>b.TOTCASH);
	   
END

GO


-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 27-Jun-13
-- Description:	Get detail of Dschedule by refno
-- =============================================
CREATE PROCEDURE [dbo].[CMS_DSchedule_GetDetailsByRefNo]	
	@REF_NO			varchar(10),
	@CLIENT_CODE	varchar(6)
AS
BEGIN	
	
	SET NOCOUNT ON;

	IF @CLIENT_CODE=''
		BEGIN
			
			SELECT ds.*,
				cl.ACC_NO,cl.ACC_NAME,lc.LOCATION_NAME 
			FROM DSCHEDULE ds
				LEFT OUTER JOIN CLIENT cl
				ON cl.CLIENT_CODE=ds.CLIENT_CODE
				LEFT OUTER JOIN LOCATION lc
				ON lc.LOCATION_CODE=ds.LOCATION_CODE
			WHERE REF_NO=@REF_NO 
				

		END
	ELSE
		BEGIN
			
			SELECT ds.*,
				cl.ACC_NO,cl.ACC_NAME,lc.LOCATION_NAME 
			FROM DSCHEDULE ds
				LEFT OUTER JOIN CLIENT cl
				ON cl.CLIENT_CODE=ds.CLIENT_CODE
				LEFT OUTER JOIN LOCATION lc
				ON lc.LOCATION_CODE=ds.LOCATION_CODE
			WHERE REF_NO=@REF_NO 
				AND ds.CLIENT_CODE=@CLIENT_CODE

		END
	
END

GO


GRANT EXECUTE ON [dbo].[CMS_DSchedule_GetDetailsByRefNo] TO [ccms_sp_only]

GO



CREATE TABLE  [dbo].[CITIANY_FUND] (
	CURR_NO			numeric(5,0),
	VALUE_DATE		datetime,
	AMOUNT			numeric(12,2),
	ACC_NO			varchar(16),
	DR_CR			char(1),
	INSTRUMENT_NO	varchar(20),
	REL_CUST		varchar(9),
	ADD_TEXT		varchar(160),
	MIS_CODE4		varchar(9)	
	PRIMARY KEY(CURR_NO)
) 

GO


ALTER TABLE dbo.CCHECK ADD
	[FILENAME] varchar(15) NULL,
	FILE_USER_ID varchar(20) NULL,
	FLEXGEN_DATE datetime NULL
GO

ALTER TABLE dbo.CCHECK_HIST ADD
	[FILENAME] varchar(15) NULL,
	FILE_USER_ID varchar(20) NULL,
	FLEXGEN_DATE datetime NULL
GO



CREATE TABLE FLEX_ACC(
	SLNO	numeric(3,0) NOT NULL,
	ACC_NO varchar(16) NOT NULL,
	ACC_NAME varchar(50) NOT NULL,
	INPUT_BY varchar(20) NULL,
	INPUT_DATETIME datetime NULL,
	INPUT_FROM varchar(30) NULL,
	AUTH_BY varchar(20) NULL,
	AUTH_DATETIME datetime NULL,
	AUTH_FROM varchar(30) NULL,	
	MOD_NO numeric(3, 0) NOT NULL,
	[STATUS] char(1) NOT NULL,
 PRIMARY KEY(SLNO)
)

GO

CREATE TABLE FLEX_ACC_HIST(
	SLNO	numeric(3,0) NOT NULL,
	ACC_NO varchar(16) NOT NULL,
	ACC_NAME varchar(50) NOT NULL,
	INPUT_BY varchar(20) NULL,
	INPUT_DATETIME datetime NULL,
	INPUT_FROM varchar(30) NULL,
	AUTH_BY varchar(20) NULL,
	AUTH_DATETIME datetime NULL,
	AUTH_FROM varchar(30) NULL,	
	MOD_NO numeric(3, 0) NOT NULL,
	[STATUS] char(1) NOT NULL,
	IS_AUTH bit NOT NULL,
 PRIMARY KEY(SLNO,MOD_NO)
)

GO


INSERT INTO FLEX_ACC(SLNO, ACC_NO, ACC_NAME, INPUT_BY, INPUT_DATETIME, 
	INPUT_FROM, AUTH_BY, AUTH_DATETIME, AUTH_FROM, MOD_NO, [STATUS])
	VALUES(1,'G02293231','Collection Commission Account','SYSTEM',GETDATE(),
	'SYSTEM','SYSTEM',GETDATE(),'SYSTEM',1,'L');

INSERT INTO FLEX_ACC(SLNO, ACC_NO, ACC_NAME, INPUT_BY, INPUT_DATETIME, 
	INPUT_FROM, AUTH_BY, AUTH_DATETIME, AUTH_FROM, MOD_NO, [STATUS])
	VALUES(2,'G021293233','VAT Acc','SYSTEM',GETDATE(),
	'SYSTEM','SYSTEM',GETDATE(),'SYSTEM',1,'L');

INSERT INTO FLEX_ACC(SLNO, ACC_NO, ACC_NAME, INPUT_BY, INPUT_DATETIME, 
	INPUT_FROM, AUTH_BY, AUTH_DATETIME, AUTH_FROM, MOD_NO, [STATUS])
	VALUES(3,'G0312293232','Suspense Acc','SYSTEM',GETDATE(),
	'SYSTEM','SYSTEM',GETDATE(),'SYSTEM',1,'L');

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 03-Jul-13
-- Description: Process for CitiAny Funding
-- =============================================

CREATE PROCEDURE [dbo].[CMS_Process_CitiAnyFunding]
	@VALUE_DATE	datetime ,        	
	@BATCH_NO	varchar(4) output	
AS
BEGIN

	SET NOCOUNT ON;

	DECLARE 
		@v_CURR_NO		numeric(5,0),
		@v_AMOUNT		numeric(12,2),		
		@v_CNT			numeric(5),
		@v_ACC_NO		varchar(16),
		@v_VALUE_DATE	varchar(20),
		@v_CHECK_NO		varchar(15),
		@v_CHARGE		numeric(12,2),
		@v_VATPER		numeric(12,2),
		@v_VAT			numeric(12,2),
		@v_COMM_ACC		varchar(16),--
		@v_VAT_ACC		varchar(16),--
		@v_SUS_ACC		varchar(16), --
		@v_TotSuspence	numeric(12,2),
		@v_DR_CHRG_VAT	numeric(12,2),
		@v_D_CODE		varchar(12),
		@v_T_DR_CHRG_VAT	numeric(12,2),
		@v_T_CHARGE			numeric(12,2),
		@v_T_VAT			numeric(12,2),
		@v_T_CNT			numeric(5),
		@v_T_VATPER			numeric(12,2),
		@v_T2_CHARGE		numeric(12,2);
		
	SELECT @v_CURR_NO=1;
	
	SELECT @v_TotSuspence=0;
	
	SELECT @BATCH_NO = ISNULL(MAX(BATCH_NO),'5600')+1		
		FROM GENPRM
		WHERE DATEDIFF(d,GETDATE(),BATCH_DATE)=0;

	SELECT @v_COMM_ACC = ACC_NO	
		FROM FLEX_ACC
		WHERE SLNO=1;

	SELECT @v_VAT_ACC = ACC_NO	
		FROM FLEX_ACC
		WHERE SLNO=2;

	SELECT @v_SUS_ACC = ACC_NO	
		FROM FLEX_ACC
		WHERE SLNO=3;

	SELECT @v_VALUE_DATE= SUBSTRING(CONVERT(VARCHAR,@VALUE_DATE,3),1,2) + 
		SUBSTRING(CONVERT(VARCHAR,@VALUE_DATE,3),4,2) +
		SUBSTRING(CONVERT(VARCHAR,@VALUE_DATE,3),7,2);

	DELETE FROM CITIANY_FUND;

------ type 1

	DECLARE tmpcursor1 CURSOR FOR
		SELECT sum(nc.AMOUNT) AS COLLECTED_AMOUNT,  
			COUNT(cc.NONZONE_REF) as CNT,cl.ACC_NO
			FROM NCOLLECTION nc
			INNER JOIN CCHECK cc
			ON cc.NONZONE_REF=nc.NONZONE_REF
			INNER JOIN CLIENT cl
			ON cl.CLIENT_CODE=cc.CLIENT_CODE
			WHERE cc.RTN_STATUS='P' AND cl.BILLING_TYPE='1'
			AND cc.FILENAME IS NULL	
			GROUP BY cl.ACC_NO;

	OPEN tmpcursor1;
	FETCH NEXT FROM tmpcursor1 
        INTO @v_AMOUNT,@v_CNT,@v_ACC_NO;

	WHILE @@FETCH_STATUS=0 
 	BEGIN
		INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
			INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
			VALUES(@v_CURR_NO,@VALUE_DATE,@v_AMOUNT,@v_ACC_NO,'C',
			@v_VALUE_DATE,'',
			'CITIANYWHERE FUNDING AGAINST '+ CONVERT(varchar,@v_CNT)
			+' COLLECTED OUTSTATION CHECKS',''
			)

		SELECT @v_TotSuspence=@v_TotSuspence+@v_AMOUNT;

		SELECT @v_CURR_NO=@v_CURR_NO+1;

		FETCH NEXT FROM tmpcursor1 
			INTO @v_AMOUNT,@v_CNT,@v_ACC_NO;

	END

	CLOSE tmpcursor1;	
	DEALLOCATE tmpcursor1;

------------- type 2
	
	DECLARE tmpcursor2 CURSOR FOR
		SELECT cl.acc_no,
			nc.AMOUNT-cl.CITIANY_CHARGE-(cl.CITIANY_STD_CHARGE*cl.CITIANY_VAT/100) AS PAYED_AMOUNT,
			cc.CHECK_NO,cl.CITIANY_CHARGE,cl.CITIANY_VAT AS CITIVATPER,
			(cl.CITIANY_STD_CHARGE*cl.CITIANY_VAT/100) AS CITIVAT
			FROM NCOLLECTION nc
			INNER JOIN CCHECK cc
			ON cc.NONZONE_REF=nc.NONZONE_REF
			INNER JOIN CLIENT cl
			ON cl.CLIENT_CODE=cc.CLIENT_CODE
			WHERE cc.RTN_STATUS='P' AND cl.BILLING_TYPE='2'
			AND cc.FILENAME IS NULL	
			ORDER BY cl.CLIENT_CODE;

	OPEN tmpcursor2;
	FETCH NEXT FROM tmpcursor2 
        INTO @v_ACC_NO,@v_AMOUNT,@v_CHECK_NO,@v_CHARGE,@v_VATPER,@v_VAT;

	WHILE @@FETCH_STATUS=0 
 	BEGIN

		INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
			INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
			VALUES(@v_CURR_NO,@VALUE_DATE,@v_AMOUNT,@v_ACC_NO,'C',
			@v_CHECK_NO,'',
			'CITIANYWHERE FUNDING LESS DRAWEE BANK CHARGES VAT AND OUR COLLECTION COMMISSION @ TK. '+ CONVERT(varchar,@v_CHARGE) 
			+ ' INCLUDING ' + CONVERT(varchar,@v_VATPER) +'% VAT ON COMMISSION.',''
			);		

		SELECT @v_CURR_NO=@v_CURR_NO+1;
		SELECT @v_TotSuspence=@v_TotSuspence+@v_AMOUNT;

		IF @v_CHARGE<>0 
		BEGIN
			INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
				INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
				VALUES(@v_CURR_NO,@VALUE_DATE,@v_CHARGE,@v_COMM_ACC,'C',
				@v_CHECK_NO,'BD0200019',@v_ACC_NO,'1056'
				);

			SELECT @v_CURR_NO=@v_CURR_NO+1;
			SELECT @v_TotSuspence=@v_TotSuspence+@v_CHARGE;
		END

		IF @v_VAT<>0 
		BEGIN
			INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
				INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
				VALUES(@v_CURR_NO,@VALUE_DATE,@v_VAT,@v_VAT_ACC,'C',
				@v_CHECK_NO,'BD0200019',@v_ACC_NO,'1602'
				);
			
			SELECT @v_CURR_NO=@v_CURR_NO+1;
			SELECT @v_TotSuspence=@v_TotSuspence+@v_VAT;
		END

		FETCH NEXT FROM tmpcursor2 
			INTO @v_ACC_NO,@v_AMOUNT,@v_CHECK_NO,@v_CHARGE,@v_VATPER,@v_VAT;

	END

	CLOSE tmpcursor2;	
	DEALLOCATE tmpcursor2;
	
------------- type 3

	DECLARE tmpcursor3 CURSOR FOR
		SELECT DISTINCT cl.ACC_NO
			FROM  CCHECK cc
			INNER JOIN CLIENT cl
			ON cl.CLIENT_CODE=cc.CLIENT_CODE
			WHERE cc.RTN_STATUS='P' AND cl.BILLING_TYPE='3'
			AND cc.FILENAME IS NULL	


	OPEN tmpcursor3;
	FETCH NEXT FROM tmpcursor3 
        INTO @v_ACC_NO;

	WHILE @@FETCH_STATUS=0 
 	BEGIN
		
		DECLARE tmpcursor3_1 CURSOR FOR
			SELECT 
				cc.AMOUNT AS CHECKAMOUNT,(cc.AMOUNT-nc.AMOUNT) AS DRAWEE_CRG_VAT,
				cl.CITIANY_CHARGE,
				(cl.CITIANY_STD_CHARGE*cl.CITIANY_VAT/100) AS CITIVAT,
				cc.CHECK_NO,cc.D_CODE,
				cl.CITIANY_VAT AS CITIVATPER
				FROM NCOLLECTION nc
				INNER JOIN CCHECK cc
				ON cc.NONZONE_REF=nc.NONZONE_REF
				INNER JOIN CLIENT cl
				ON cl.CLIENT_CODE=cc.CLIENT_CODE
				WHERE cc.RTN_STATUS='P' AND cl.BILLING_TYPE='3'
				AND cc.FILENAME IS NULL	
				AND cl.ACC_NO=@v_ACC_NO
			
		SELECT @v_T_DR_CHRG_VAT=0;
		SELECT @v_T_CHARGE=0;
		SELECT @v_T_VAT=0;
		SELECT @v_T_CNT=0;
		SELECT @v_T_VATPER=0;
		SELECT @v_T2_CHARGE=0;

		OPEN tmpcursor3_1;
		FETCH NEXT FROM tmpcursor3_1 
			INTO @v_AMOUNT,@v_DR_CHRG_VAT,
			@v_CHARGE,@v_VAT,@v_CHECK_NO,@v_D_CODE,@v_VATPER;

		WHILE @@FETCH_STATUS=0 
 		BEGIN
			INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
				INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
				VALUES(@v_CURR_NO,@VALUE_DATE,@v_AMOUNT,@v_ACC_NO,'C',
				@v_CHECK_NO,'',
				'1 OUTSTATION CHECK   CHECK NO  ' + @v_CHECK_NO 
				+'   DS NO  '+ @v_D_CODE ,''
				);

			SELECT @v_T_DR_CHRG_VAT=@v_T_DR_CHRG_VAT+@v_DR_CHRG_VAT;
			SELECT @v_T_CHARGE=@v_T_CHARGE+@v_CHARGE;
			SELECT @v_T_VAT=@v_T_VAT+@v_VAT;
			SELECT @v_T_CNT=@v_T_CNT+1;
			SELECT @v_T_VATPER=@v_VATPER;
			SELECT @v_T2_CHARGE=@v_CHARGE;
	
			
			SELECT @v_TotSuspence=@v_TotSuspence+@v_AMOUNT;
			SELECT @v_CURR_NO=@v_CURR_NO+1;


			FETCH NEXT FROM tmpcursor3_1 
				INTO @v_AMOUNT,@v_DR_CHRG_VAT,
				@v_CHARGE,@v_VAT,@v_CHECK_NO,@v_D_CODE,@v_VATPER;
		END

		IF @v_T_DR_CHRG_VAT<>0 
		BEGIN
			INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
				INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
				VALUES(@v_CURR_NO,@VALUE_DATE,@v_T_DR_CHRG_VAT,@v_ACC_NO,'D',
				@v_VALUE_DATE,'',
				'DEDUCTION FOR DRAWEE BANK CHARGES AND VAT FOR'+CONVERT(varchar,@v_T_CNT)
				+' COLLECTION CHECKS' ,''
				);

			SELECT @v_CURR_NO=@v_CURR_NO+1;
			SELECT @v_TotSuspence=@v_TotSuspence-@v_T_DR_CHRG_VAT;
		END

		IF @v_T_CHARGE + @v_T_VAT<>0 
		BEGIN
			INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
				INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
				VALUES(@v_CURR_NO,@VALUE_DATE,@v_T_CHARGE + @v_T_VAT,@v_ACC_NO,'D',
				@v_VALUE_DATE,'',
				'DEDUCTION FOR OUR COLLECTION COMMISSION @ TK. '+ CONVERT(varchar,@v_T2_CHARGE) 
				+' PER  CHECK INCLUDING '+CONVERT(varchar,@v_T_VATPER)+'% VAT FOR'+CONVERT(varchar,@v_T_CNT)
				+'COLLECTION CHECKS' ,''
				);

			SELECT @v_CURR_NO=@v_CURR_NO+1;
			SELECT @v_TotSuspence=@v_TotSuspence-@v_T_CHARGE-@v_T_VAT;
		END

		IF @v_T_CHARGE<>0 
		BEGIN
			INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
				INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
				VALUES(@v_CURR_NO,@VALUE_DATE,@v_T_CHARGE,@v_COMM_ACC,'C',
				@v_VALUE_DATE,'BD0200721',@v_ACC_NO,'1056'
				);

			SELECT @v_CURR_NO=@v_CURR_NO+1;
			SELECT @v_TotSuspence=@v_TotSuspence+@v_T_CHARGE;
		END

		IF @v_T_VAT<>0 
		BEGIN
			INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
				INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
				VALUES(@v_CURR_NO,@VALUE_DATE,@v_T_VAT,@v_VAT_ACC,'C',
				@v_VALUE_DATE,'BD0200721',@v_ACC_NO,'1602'
				);
			
			SELECT @v_CURR_NO=@v_CURR_NO+1;
			SELECT @v_TotSuspence=@v_TotSuspence+@v_T_VAT;
		END

		CLOSE tmpcursor3_1;	
		DEALLOCATE tmpcursor3_1;


		FETCH NEXT FROM tmpcursor3 
			INTO @v_ACC_NO;
	END

	CLOSE tmpcursor3;	
	DEALLOCATE tmpcursor3;




------------- type 4
	
	DECLARE tmpcursor4 CURSOR FOR
		SELECT cl.acc_no,
			cc.AMOUNT AS CHECKAMOUNT,(cc.AMOUNT-nc.AMOUNT)AS DRAWEE_CRG_VAT,
			cl.CITIANY_CHARGE,(cl.CITIANY_STD_CHARGE*cl.CITIANY_VAT/100) AS CITIVAT,
			cc.CHECK_NO,cc.D_CODE,
			cl.CITIANY_VAT AS CITIVATPER
			FROM NCOLLECTION nc
			INNER JOIN CCHECK cc
			ON cc.NONZONE_REF=nc.NONZONE_REF
			INNER JOIN CLIENT cl
			ON cl.CLIENT_CODE=cc.CLIENT_CODE
			WHERE cc.RTN_STATUS='P' AND cl.BILLING_TYPE='4'
			AND cc.FILENAME IS NULL	
			ORDER BY cl.CLIENT_CODE


	OPEN tmpcursor4;
	FETCH NEXT FROM tmpcursor4 
        INTO @v_ACC_NO,@v_AMOUNT,@v_DR_CHRG_VAT,
			@v_CHARGE,@v_VAT,@v_CHECK_NO,@v_D_CODE,@v_VATPER;

	WHILE @@FETCH_STATUS=0 
 	BEGIN

		INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
			INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
			VALUES(@v_CURR_NO,@VALUE_DATE,@v_AMOUNT,@v_ACC_NO,'C',
			@v_CHECK_NO,'',
			'1 OUTSTATION CHECK   CHECK NO  ' + @v_CHECK_NO 
			+'   DS NO  '+ @v_D_CODE ,''
			);

		SELECT @v_CURR_NO=@v_CURR_NO+1;
		SELECT @v_TotSuspence=@v_TotSuspence+@v_AMOUNT;

-----------
		IF @v_DR_CHRG_VAT<>0 
		BEGIN
			INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
				INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
				VALUES(@v_CURR_NO,@VALUE_DATE,@v_DR_CHRG_VAT,@v_ACC_NO,'D',
				@v_CHECK_NO,'',
				'DEDUCTION FOR DRAWEE BANK CHARGES AND VAT' ,''
				);

			SELECT @v_CURR_NO=@v_CURR_NO+1;
			SELECT @v_TotSuspence=@v_TotSuspence-@v_DR_CHRG_VAT;
		END


--------------
		IF @v_VAT<>0 
		BEGIN
			INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
				INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
				VALUES(@v_CURR_NO,@VALUE_DATE,@v_CHARGE + @v_VAT,@v_ACC_NO,'D',
				@v_CHECK_NO,'',
				'DEDUCTION FOR OUR COLLECTION COMMISSION OF TK. '+ CONVERT(varchar,@v_CHARGE) 
				+' AND '+ CONVERT(varchar,@v_VATPER) +'% VAT ON CHARGES' ,''
				);

			SELECT @v_CURR_NO=@v_CURR_NO+1;
			SELECT @v_TotSuspence=@v_TotSuspence-@v_CHARGE-@v_VAT;
		END

---------
		
		IF @v_CHARGE<>0 
		BEGIN
			INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
				INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
				VALUES(@v_CURR_NO,@VALUE_DATE,@v_CHARGE,@v_COMM_ACC,'C',
				@v_CHECK_NO,'BD0200191',@v_ACC_NO,'1056'
				);

			SELECT @v_CURR_NO=@v_CURR_NO+1;
			SELECT @v_TotSuspence=@v_TotSuspence+@v_CHARGE;
		END

		IF @v_VAT<>0 
		BEGIN
			INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
				INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
				VALUES(@v_CURR_NO,@VALUE_DATE,@v_VAT,@v_VAT_ACC,'C',
				@v_CHECK_NO,'BD0200191',@v_ACC_NO,'1602'
				);
			
			SELECT @v_CURR_NO=@v_CURR_NO+1;
			SELECT @v_TotSuspence=@v_TotSuspence+@v_VAT;
		END

		FETCH NEXT FROM tmpcursor4 
			INTO @v_ACC_NO,@v_AMOUNT,@v_DR_CHRG_VAT,
				@v_CHARGE,@v_VAT,@v_CHECK_NO,@v_D_CODE,@v_VATPER;

	END

	CLOSE tmpcursor4;	
	DEALLOCATE tmpcursor4;


	IF @v_TotSuspence<>0
	BEGIN
		INSERT INTO CITIANY_FUND(CURR_NO, VALUE_DATE, AMOUNT, ACC_NO, DR_CR, 
			INSTRUMENT_NO, REL_CUST, ADD_TEXT, MIS_CODE4)
			VALUES(@v_CURR_NO,@VALUE_DATE,@v_TotSuspence,@v_SUS_ACC,'D',
			'','','CITIANYWHERE FUNDING',''
			);
	END

	RETURN 0;
	
    
END   


GO

GRANT EXECUTE ON [dbo].[CMS_Process_CitiAnyFunding] TO [ccms_sp_only]

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 4-Jul-13
-- Description:	Get detail of CITIANY_FUND
-- =============================================
CREATE PROCEDURE [dbo].[CMS_CitiAnyFund_GetDetail]		
AS
BEGIN	
	
	SET NOCOUNT ON;

	SELECT * 
	FROM CITIANY_FUND
	ORDER BY CURR_NO;

END

GO

GRANT EXECUTE ON [dbo].[CMS_CitiAnyFund_GetDetail] TO [ccms_sp_only]

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 4-Jul-13
-- Description: Update CCHECK with CITYANY_FUND
-- =============================================

CREATE PROCEDURE [dbo].[CMS_Process_CitiAnyFundUpdateRef]
	@FILENAME		varchar(15),	
	@VALUE_DATE		datetime, 
	@BATCH_NO		varchar(10)
AS
BEGIN	
	DECLARE @ErrorVar	int;
	
	SET NOCOUNT ON;
      
    UPDATE CCHECK SET [FILENAME]=@FILENAME,
		FILE_USER_ID=substring(suser_name(),charindex('\',suser_name())+1,20),
		FLEXGEN_DATE=@VALUE_DATE 		
		WHERE RTN_STATUS='P' 
		AND [FILENAME] IS NULL;

	UPDATE GENPRM
		SET BATCH_NO=@BATCH_NO, BATCH_DATE=GETDATE();     
    
	    
                         
	IF @@ERROR<>0 GOTO ErrorHandler              
               
               
	RETURN 0;            
                         
    ErrorHandler:              
	            
	             
	RETURN 1;
	
	
END


GO

GRANT EXECUTE ON [dbo].[CMS_Process_CitiAnyFundUpdateRef] TO [ccms_sp_only]

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 04-Jul-13
-- Description:	update detail to FlexAcc table
-- =============================================

CREATE PROCEDURE [dbo].[CMS_FlexAcc_Update]	
	@SLNO		numeric(3,0),
	@ACC_NO 	varchar(16),
	@ACC_NAME 	varchar(50),	
	@MOD_NO		int,
	@RET_MOD_NO	int output
AS
BEGIN	
	DECLARE @ErrorVar INT;
	
	SET NOCOUNT ON;

	BEGIN TRANSACTION;

	IF EXISTS(SELECT SLNO FROM FLEX_ACC 
				WHERE SLNO=@SLNO AND MOD_NO=@MOD_NO)
		BEGIN

			DELETE FLEX_ACC_HIST WHERE SLNO=@SLNO AND IS_AUTH=0;

			SELECT @ErrorVar = @@ERROR;		

			IF @ErrorVar <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END
			
			SELECT @RET_MOD_NO = @MOD_NO +1;
			
			INSERT INTO FLEX_ACC_HIST(SLNO, ACC_NO,ACC_NAME,
				INPUT_BY,INPUT_DATETIME,INPUT_FROM,MOD_NO,[STATUS],IS_AUTH)
				VALUES(@SLNO, @ACC_NO,@ACC_NAME,
				substring(suser_name(),charindex('\',suser_name())+1,20),
				GETDATE(),HOST_NAME(),@RET_MOD_NO,'U',0);

			SELECT @ErrorVar = @@ERROR;

			IF @ErrorVar <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END				

			COMMIT TRANSACTION;
			
			RETURN 0;

				
		END
	ELSE -- might be in hist table
		BEGIN

			IF EXISTS(SELECT SLNO from FLEX_ACC_HIST 
						WHERE SLNO=@SLNO AND MOD_NO=@MOD_NO AND IS_AUTH=0)
				BEGIN

					DELETE FLEX_ACC_HIST WHERE SLNO=@SLNO AND IS_AUTH=0;

					SELECT @ErrorVar = @@ERROR;		

					IF @ErrorVar <> 0
						BEGIN
							ROLLBACK TRANSACTION;
							RETURN 1;
						END

					INSERT INTO FLEX_ACC_HIST(SLNO, ACC_NO,ACC_NAME,
						INPUT_BY,INPUT_DATETIME,INPUT_FROM,MOD_NO,[STATUS],IS_AUTH)
						VALUES(@SLNO, @ACC_NO,@ACC_NAME,
						substring(suser_name(),charindex('\',suser_name())+1,20),
						GETDATE(),HOST_NAME(),@MOD_NO,'U',0);

					SELECT @ErrorVar = @@ERROR;
		
					IF @ErrorVar <> 0
						BEGIN
							ROLLBACK TRANSACTION;
							RETURN 1;
						END
					
					SELECT @RET_MOD_NO=@MOD_NO;
					
					COMMIT TRANSACTION;
					RETURN 0;
			
				END
			ELSE
				BEGIN
					-- not exist
					ROLLBACK TRANSACTION;
					RETURN 4;
				END

		END
    
END



GO

GRANT EXECUTE ON [dbo].[CMS_FlexAcc_Update] TO [ccms_sp_only]

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 04-Jul-13
-- Description:	Get detail of FlexAcc table
-- =============================================
CREATE PROCEDURE [dbo].[CMS_FlexAcc_GetDetail]	
	@SLNO	numeric(3,0),	
	@MOD_NO	int	
AS
BEGIN	
	
	SET NOCOUNT ON;

	IF EXISTS( SELECT SLNO 
			   FROM FLEX_ACC WHERE SLNO=@SLNO AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT *,'IS_AUTH'=1 
			FROM FLEX_ACC 
			WHERE SLNO=@SLNO AND MOD_NO = @MOD_NO
		END	
	ELSE
		BEGIN
			SELECT * 
			FROM FLEX_ACC_HIST
			WHERE SLNO=@SLNO AND MOD_NO = @MOD_NO
		END
END


GO

GRANT EXECUTE ON [dbo].[CMS_FlexAcc_GetDetail] TO [ccms_sp_only]

GO



-- ===========================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 04-Jul-13
-- Description:	Get Total # of modification of FlexAcc table
-- =============================================
CREATE PROCEDURE [dbo].[CMS_FlexAcc_GetMaxMod]	
	@SLNO	numeric(3,0)
AS
BEGIN	

	DECLARE @Max1	int,
			@Max2	int;

	SET NOCOUNT ON;
	
	SELECT @Max1=0,@Max2=0;

	SELECT @Max1=ISNULL(MAX(MOD_NO),0) FROM FLEX_ACC_HIST 
		WHERE SLNO=@SLNO AND IS_AUTH=0;
		
	IF @Max1=0
		BEGIN
			SELECT @Max2=ISNULL(MAX(MOD_NO),0) FROM FLEX_ACC 
				WHERE SLNO=@SLNO;
			SELECT @Max2;
			RETURN 0;			
		END
	
	SELECT @Max1;
	RETURN 0;

END


GO

GRANT EXECUTE ON [dbo].[CMS_FlexAcc_GetMaxMod] TO [ccms_sp_only]


GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 04-Jul-13
-- Description:	Authorize record to FlexAcc table
-- =============================================
CREATE PROCEDURE [dbo].[CMS_FlexAcc_Auth]	
	@SLNO			numeric(3,0),	
	@MOD_NO			int,
	@MOD_DATETIME	datetime
AS
BEGIN	
	DECLARE @STATUS			char(1),
			@ACC_NO 		varchar(16),
			@ACC_NAME 		varchar(50),			
			@INPUT_BY		varchar(20),
			@INPUT_DATETIME datetime,
			@INPUT_FROM		varchar(30),
			@AUTH_BY		varchar(20),
			@AUTH_DATETIME	datetime,
			@AUTH_FROM		varchar(30),
			@LAST_MOD_NO	int,
			@IS_AUTH		bit;			
	
	DECLARE @ErrorVar1		int; 
			

	SET NOCOUNT ON;

	SELECT @STATUS = '';

	BEGIN TRANSACTION

	IF EXISTS(SELECT SLNO from FLEX_ACC_HIST 
			  WHERE SLNO=@SLNO AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT @STATUS=[STATUS],@ACC_NO=ACC_NO,@ACC_NAME=ACC_NAME,				
				@INPUT_BY=INPUT_BY,	@INPUT_DATETIME=INPUT_DATETIME,
				@INPUT_FROM=INPUT_FROM,@IS_AUTH=IS_AUTH
				FROM FLEX_ACC_HIST 
				WHERE SLNO=@SLNO AND MOD_NO=@MOD_NO;
			IF (@IS_AUTH = 1)
				BEGIN
					-- already authorized
					ROLLBACK TRANSACTION;
					RETURN 3;
				END;
			IF (@INPUT_BY = substring(suser_name(),charindex('\',suser_name())+1,20))
				BEGIN
					-- maker and checker same person
					ROLLBACK TRANSACTION;
					RETURN 5;
				END;
			IF (@INPUT_DATETIME <> @MOD_DATETIME)
				BEGIN
					-- Data hase been changed. Need notification
					ROLLBACK TRANSACTION;
					RETURN 7;
				END;			
		END;
	ELSE
		BEGIN			
			-- not exist
			ROLLBACK TRANSACTION;
			RETURN 4;
		END	;

	IF @MOD_NO > 1
		BEGIN	
		
			INSERT INTO FLEX_ACC_HIST 
				SELECT *,1 FROM FLEX_ACC
				WHERE SLNO=@SLNO;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END


			UPDATE FLEX_ACC_HIST
				SET [STATUS] = 'O' 
				WHERE SLNO=@SLNO 
				AND [STATUS] = 'L';

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			IF @STATUS='U'
				BEGIN
					SELECT @STATUS='L';
				END

			UPDATE FLEX_ACC
				SET ACC_NO=@ACC_NO,ACC_NAME=@ACC_NAME,				
				INPUT_BY=@INPUT_BY,	INPUT_DATETIME=@INPUT_DATETIME,
				INPUT_FROM=@INPUT_FROM,
				AUTH_BY=substring(suser_name(),charindex('\',suser_name())+1,20),
				AUTH_DATETIME=GETDATE(),AUTH_FROM=HOST_NAME(),
				MOD_NO=@MOD_NO,[STATUS]=@STATUS
			WHERE SLNO=@SLNO;

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END
			
			DELETE FLEX_ACC_HIST WHERE SLNO=@SLNO
				AND IS_AUTH=0;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END	

		END
	ELSE -- first record
		BEGIN
			INSERT INTO FLEX_ACC
				SELECT SLNO, ACC_NO,ACC_NAME, 
					INPUT_BY, INPUT_DATETIME, INPUT_FROM, 
					substring(suser_name(),charindex('\',suser_name())+1,20), 
					GETDATE(), HOST_NAME(), MOD_NO, 'L' 
					FROM FLEX_ACC_HIST
					WHERE SLNO=@SLNO AND MOD_NO=@MOD_NO;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			DELETE FLEX_ACC_HIST WHERE SLNO=@SLNO
				AND IS_AUTH=0;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END			
					
		END

		COMMIT TRANSACTION
		
		SELECT @ErrorVar1 = @@error;
		
		IF @ErrorVar1 = 0
			BEGIN		
				RETURN 0;
			END
		ELSE
			BEGIN
				RETURN 1;
			END


	
    
END



GO

GRANT EXECUTE ON [dbo].[CMS_FlexAcc_Auth] TO [ccms_sp_only]


GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 11-Jul-13
-- Description:	Remove record from FlexAcc table
-- =============================================
CREATE PROCEDURE [dbo].[CMS_FlexAcc_Remove]	
	@SLNO	varchar(4),	
	@MOD_NO			int,
	@RET_MOD_NO		int output
AS
BEGIN	
	DECLARE @STATUS			char(1),
			@ACC_NO		 	varchar(16),
			@ACC_NAME 		varchar(50),
			@INPUT_BY		varchar(20),
			@INPUT_DATETIME datetime,
			@INPUT_FROM		varchar(30),			
			@IS_AUTH		bit;			
	
	DECLARE @ErrorVar		int; 
			

	SET NOCOUNT ON;

	SET @STATUS = '';

	BEGIN TRANSACTION

	IF EXISTS(SELECT SLNO from FLEX_ACC 
			  WHERE SLNO=@SLNO AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT @STATUS=[STATUS],@ACC_NO=ACC_NO,@ACC_NAME=ACC_NAME,				
				@INPUT_BY=INPUT_BY,	@INPUT_DATETIME=INPUT_DATETIME,
				@INPUT_FROM=INPUT_FROM
				FROM FLEX_ACC 
				WHERE SLNO=@SLNO AND MOD_NO=@MOD_NO;
			
			IF (@STATUS = 'D')
				BEGIN
					-- already deleted
					ROLLBACK TRANSACTION;
					RETURN 6;
				END;

			DELETE FLEX_ACC_HIST WHERE SLNO=@SLNO AND IS_AUTH=0;

			SELECT @ErrorVar = @@ERROR;		

			IF @ErrorVar <> 0				
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			SELECT @RET_MOD_NO = @MOD_NO + 1;

			INSERT INTO 
				FLEX_ACC_HIST (SLNO, ACC_NO, ACC_NAME,
				INPUT_BY, INPUT_DATETIME, INPUT_FROM, MOD_NO, 
				[STATUS], IS_AUTH)
				VALUES(@SLNO, @ACC_NO, @ACC_NAME, 
				substring(suser_name(),charindex('\',suser_name())+1,20), 
				GETDATE(), HOST_NAME(), @RET_MOD_NO, 
				'D', 0)

			SELECT @ErrorVar = @@ERROR;		

			IF @ErrorVar <> 0				
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END
			
			COMMIT TRANSACTION;
			RETURN 0;
				
		END;
	ELSE 
		BEGIN			
			-- item might exist in hist table
			IF EXISTS(SELECT SLNO from FLEX_ACC_HIST 
					  WHERE SLNO=@SLNO AND MOD_NO=@MOD_NO )
				BEGIN
					DELETE FLEX_ACC_HIST
						WHERE SLNO=@SLNO AND MOD_NO=@MOD_NO AND IS_AUTH=0;

					SELECT @ErrorVar = @@ERROR;		

					IF @ErrorVar <> 0				
						BEGIN
							ROLLBACK TRANSACTION;
							RETURN 1;
						END
					
					SELECT @RET_MOD_NO = @MOD_NO-1;

					COMMIT TRANSACTION;
					RETURN 0;			


				END
			ELSE
				BEGIN
					-- not exist
					ROLLBACK TRANSACTION;
					RETURN 4;
				END
			
		END		
    
END

GO

GRANT EXECUTE ON [dbo].[CMS_FlexAcc_Remove] TO [ccms_sp_only]


GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 4-Jul-13
-- Description:	Get detail to FlexAcc table
-- =============================================
CREATE PROCEDURE [dbo].[CMS_FlexAcc_GetDetailList]			
	@AUTH_FLAG	bit
AS
BEGIN	
		
	SET NOCOUNT ON;

	IF @AUTH_FLAG=0
		BEGIN
			SELECT *,'S' = 'U'				 
				FROM FLEX_ACC_HIST 
				WHERE IS_AUTH=0			
				ORDER BY SLNO;
		END;
	ELSE
		BEGIN
							
			SELECT *,1,'S' = 'A'				
				FROM FLEX_ACC
				WHERE [STATUS] ='L'					
				ORDER BY SLNO
							
		END;
	   
	   
END


GO

GRANT EXECUTE ON [dbo].[CMS_FlexAcc_GetDetailList] TO [ccms_sp_only]


GO




























