USE [CCMS]
GO

CREATE view [dbo].[V_USERS_ROLE]      
AS    
(
	SELECT u.USERS_ID,u.USERS_NAME,u.DEPT_SLNO, u.DOMAIN, u.USER_STAT,
		d.DEPT_NAME,fg.FG_ID,fg.FG_NAME
		FROM USERS u
		LEFT OUTER JOIN DEPARTMENT d 
		ON d.SLNO=u.DEPT_SLNO
		LEFT OUTER JOIN USERS_FG_DET ufg 
		ON ufg.USERS_ID=u.USERS_ID
		LEFT OUTER JOIN F_GROUP fg 
		ON fg.SLNO=ufg.FG_SLNO
		WHERE u.STATUS='L'
)

GO

GRANT SELECT ON [dbo].[V_USERS_ROLE] TO [ccms_sp_only]
GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 17-Nov-12
-- Description:	get list records of department table
-- =============================================
ALTER PROCEDURE [dbo].[CMS_Department_GetList]	
AS
BEGIN	
		
	SET NOCOUNT ON;

	SELECT SLNO,DEPT_NAME FROM DEPARTMENT WHERE STATUS='L'
	ORDER BY DEPT_NAME;
	
	   
END

GO




-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 01-Aug-13
-- Description:	Get Users detail for EERS
-- =============================================
CREATE PROCEDURE [dbo].[CMS_Users_GetEERSDetail]	
AS
BEGIN	
	
	SET NOCOUNT ON;

	SELECT u.USERS_ID,u.USERS_NAME, u.DOMAIN, u.USER_STAT,
	fg.FG_ID,fg.FG_NAME
	FROM USERS u
	LEFT OUTER JOIN USERS_FG_DET ufg 
	ON ufg.USERS_ID=u.USERS_ID
	LEFT OUTER JOIN F_GROUP fg 
	ON fg.SLNO=ufg.FG_SLNO
	WHERE u.STATUS='L' AND FG_ID IS NOT NULL
	ORDER BY USERS_ID

END

GO


GRANT EXECUTE ON [dbo].[CMS_Users_GetEERSDetail] TO [ccms_sp_only]

GO


DROP TABLE [CHECKTOTAL];

GO

DROP TABLE [CHECKTOTAL_HIST];

GO

CREATE TABLE [dbo].[CHECKTOTAL](
	[MID]	numeric(10,0) NOT NULL,
	[DS_CODE] [varchar](8) NOT NULL,
	[TOTAL_CHKNO] [int] NULL,
	[TOTAL_CHKAMT] [numeric](14, 2) NULL,
	[OPR_DATE] [datetime] NOT NULL,
	[CUSTOMER_REF] [varchar](50) NULL,
	[ENTRY_LOC] [varchar](3) NOT NULL,
	[ENTRY_DATE] [datetime] NOT NULL,
	[INPUT_BY] [varchar](20) NULL,
	[INPUT_DATETIME] [datetime] NULL,
	[INPUT_FROM] [varchar](30) NULL,
	[AUTH_BY] [varchar](20) NULL,
	[AUTH_DATETIME] [datetime] NULL,
	[AUTH_FROM] [varchar](30) NULL,
	[MOD_NO] [numeric](3, 0) NOT NULL,
	[STATUS] [char](1) NOT NULL,
	PRIMARY KEY (MID),
	UNIQUE  ([DS_CODE],[OPR_DATE],[ENTRY_LOC])
)

GO

CREATE TABLE [dbo].[CHECKTOTAL_HIST](
	[MID]	numeric(10,0) NOT NULL,
	[DS_CODE] [varchar](8) NOT NULL,
	[TOTAL_CHKNO] [int] NULL,
	[TOTAL_CHKAMT] [numeric](14, 2) NULL,
	[OPR_DATE] [datetime] NOT NULL,
	[CUSTOMER_REF] [varchar](50) NULL,
	[ENTRY_LOC] [varchar](3) NOT NULL,
	[ENTRY_DATE] [datetime] NOT NULL,
	[INPUT_BY] [varchar](20) NULL,
	[INPUT_DATETIME] [datetime] NULL,
	[INPUT_FROM] [varchar](30) NULL,
	[AUTH_BY] [varchar](20) NULL,
	[AUTH_DATETIME] [datetime] NULL,
	[AUTH_FROM] [varchar](30) NULL,
	[MOD_NO] [numeric](3, 0) NOT NULL,
	[STATUS] [char](1) NOT NULL,
	IS_AUTH	bit NOT NULL,
	PRIMARY KEY (MID,MOD_NO),
	UNIQUE ([DS_CODE],[OPR_DATE],[ENTRY_LOC],MOD_NO)
)

GO




DROP TABLE [CLEARINGTAB];
GO

DROP TABLE [CLEARINGTAB_HIST];
GO

CREATE TABLE [dbo].[CLEARINGTAB](
	[MID]	numeric(10,0) NOT NULL,
	[DSL]	numeric(4,0) NOT NULL,
	[OPR_DATE] [datetime] NOT NULL,
	[ISSUE_DATE] [datetime] NULL,
	[NIKBRANCH_CODE] [varchar](7) NOT NULL,
	[PAYEE_NAME] [varchar](40) NULL,
	[CHECK_SERIES] [varchar](4) NULL,
	[CHECK_NUMBER] [varchar](15) NOT NULL,
	[CHECK_NO] [varchar](8) NULL,
	[BOOK_NO] [varchar](8) NULL,
	[CHECK_TYPE] [varchar](8) NULL,
	[ACC_NO] [varchar](15) NULL,
	[DEBIT_CREDIT] [numeric](14, 2) NOT NULL,
	[REMARK] [varchar](15) NOT NULL,
	[BATCH_NO] [varchar](8) NULL,
	[CHECK_REF] [varchar](40) NULL,
	[ENTRY_LOC] [varchar](3) NOT NULL,
	[DS_CODE] [varchar](8) NOT NULL,
	[RTN_STATUS] [char](1) NULL,
	[RTN_CODE] [varchar](2) NULL,
	[RETURN_DATE] [datetime] NULL,
	[CHECKED] [tinyint] NULL,
	[FLEX_FILENAME] [varchar](15) NULL,
	[IS_PDC] [bit] NULL,
	[MOD_NO] [numeric](3, 0) NOT NULL,
	[VALUE_TYPE] [numeric](1, 0) NULL,
	[IS_ROW_CHG] [bit]	NULL,
	PRIMARY KEY ([MID],[DSL]),
	UNIQUE ([OPR_DATE],[NIKBRANCH_CODE],[CHECK_NUMBER],
	[DEBIT_CREDIT],[REMARK],[DS_CODE],[ENTRY_LOC])

)

GO

CREATE TABLE [dbo].[CLEARINGTAB_HIST](
	[MID]	numeric(10,0) NOT NULL,
	[DSL]	numeric(4,0) NOT NULL,
	[OPR_DATE] [datetime] NOT NULL,
	[ISSUE_DATE] [datetime] NULL,
	[NIKBRANCH_CODE] [varchar](7) NOT NULL,
	[PAYEE_NAME] [varchar](40) NULL,
	[CHECK_SERIES] [varchar](4) NULL,
	[CHECK_NUMBER] [varchar](15) NOT NULL,
	[CHECK_NO] [varchar](8) NULL,
	[BOOK_NO] [varchar](8) NULL,
	[CHECK_TYPE] [varchar](8) NULL,
	[ACC_NO] [varchar](15) NULL,
	[DEBIT_CREDIT] [numeric](14, 2) NOT NULL,
	[REMARK] [varchar](15) NOT NULL,
	[BATCH_NO] [varchar](8) NULL,
	[CHECK_REF] [varchar](40) NULL,
	[ENTRY_LOC] [varchar](3) NOT NULL,
	[DS_CODE] [varchar](8) NOT NULL,
	[RTN_STATUS] [char](1) NULL,
	[RTN_CODE] [varchar](2) NULL,
	[RETURN_DATE] [datetime] NULL,
	[CHECKED] [tinyint] NULL,
	[FLEX_FILENAME] [varchar](15) NULL,
	[IS_PDC] [bit] NULL,
	[MOD_NO] [numeric](3, 0) NOT NULL,
	[IS_AUTH] [bit] NOT NULL,
	[VALUE_TYPE] [numeric](1, 0) NULL,
	[IS_ROW_CHG] [bit]	NULL,
	PRIMARY KEY ([MID],[DSL],[MOD_NO]),
	UNIQUE ([OPR_DATE],[NIKBRANCH_CODE],[CHECK_NUMBER],
	[DEBIT_CREDIT],[REMARK],[DS_CODE],[ENTRY_LOC],[MOD_NO])

)

GO



ALTER TABLE dbo.GENPRM
ADD CLEAR_MAX_MID numeric(10,0);

GO




-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 16-Apr-13
-- Description:	Add detail to CheckTotal
-- =============================================
ALTER PROCEDURE [dbo].[CMS_CheckTotal_Add]		
	@DS_CODE		varchar(8), 
	@TOTAL_CHKNO	int, 
	@TOTAL_CHKAMT	numeric(14,2), 
	@OPR_DATE		datetime, 
	@CUSTOMER_REF	varchar(50), 
	@ENTRY_LOC		varchar(3),
	@RET_MID		numeric(10,0) output
AS
BEGIN	
	DECLARE @ErrorVar	int;
	
	SET NOCOUNT ON;

	
	IF EXISTS(SELECT DS_CODE FROM CHECKTOTAL
				WHERE DS_CODE=@DS_CODE AND OPR_DATE=@OPR_DATE
				AND ENTRY_LOC=@ENTRY_LOC)
		BEGIN
			-- Duplicate Entry				
			RETURN 2	
		END
	
	DELETE CHECKTOTAL_HIST WHERE 
		DS_CODE=@DS_CODE AND OPR_DATE=@OPR_DATE
		AND ENTRY_LOC=@ENTRY_LOC AND IS_AUTH=0;

	SELECT @ErrorVar = @@ERROR;
		
	IF @ErrorVar <> 0
		BEGIN			
			RETURN 1;
		END

	SELECT @RET_MID=ISNULL(CLEAR_MAX_MID,0)+1 FROM GENPRM;

	UPDATE GENPRM SET CLEAR_MAX_MID=@RET_MID;
	
	INSERT INTO CHECKTOTAL_HIST(MID,DS_CODE, TOTAL_CHKNO, TOTAL_CHKAMT, 
		OPR_DATE, CUSTOMER_REF, ENTRY_LOC,
		ENTRY_DATE,
		INPUT_BY,INPUT_DATETIME,INPUT_FROM,MOD_NO,[STATUS],IS_AUTH)
		VALUES(@RET_MID,@DS_CODE, @TOTAL_CHKNO, @TOTAL_CHKAMT, 
		@OPR_DATE, @CUSTOMER_REF, @ENTRY_LOC, 
		CONVERT(datetime,CONVERT(varchar(12), GETDATE())),
		substring(suser_name(),charindex('\',suser_name())+1,20),
		GETDATE(),HOST_NAME(),1,'U',0);

	SELECT @ErrorVar = @@ERROR;
	
	IF @ErrorVar <> 0
		BEGIN			
			RETURN 1;
		END

	DELETE CLEARINGTAB_HIST WHERE DS_CODE=@DS_CODE AND OPR_DATE=@OPR_DATE
		AND ENTRY_LOC=@ENTRY_LOC AND IS_AUTH=0;
	
	SELECT @ErrorVar = @@ERROR;
	
	IF @ErrorVar <> 0
		BEGIN			
			RETURN 1;
		END	

	RETURN 0;
	
   
END

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 17-Apr-13
-- Description:	Add detail to ClearingTab
-- =============================================
ALTER PROCEDURE [dbo].[CMS_ClearingTab_Add]	
	@MID			numeric(10,0),
	@DSL			numeric(4,0),	
	@OPR_DATE		datetime, 
	@ISSUE_DATE		datetime, 
	@NIKBRANCH_CODE	varchar(7), 
	@PAYEE_NAME		varchar(40), 
	@CHECK_SERIES	varchar(4), 
	@CHECK_NUMBER	varchar(15), 
	@CHECK_NO		varchar(8), 
	@BOOK_NO		varchar(8), 
	@CHECK_TYPE		varchar(8), 
	@ACC_NO			varchar(15), 
	@DEBIT_CREDIT	numeric(14,2), 
	@REMARK			varchar(15), 
	@BATCH_NO		varchar(8), 
	@CHECK_REF		varchar(40), 
	@ENTRY_LOC		varchar(3), 
	@DS_CODE		varchar(8),
	@VALUE_TYPE		numeric(1,0),
	@IS_ROW_CHG		bit
AS
BEGIN	

	DECLARE @ErrorVar	int;
		
	SET NOCOUNT ON;
			
	INSERT INTO CLEARINGTAB_HIST(MID,DSL,OPR_DATE, ISSUE_DATE, NIKBRANCH_CODE, PAYEE_NAME, 
		CHECK_SERIES, CHECK_NUMBER, CHECK_NO, BOOK_NO, CHECK_TYPE, ACC_NO, 
		DEBIT_CREDIT, REMARK, BATCH_NO, CHECK_REF, ENTRY_LOC, DS_CODE, 
		RTN_STATUS, IS_PDC,
		MOD_NO,IS_AUTH,VALUE_TYPE,IS_ROW_CHG)
		VALUES(@MID,@DSL,@OPR_DATE, @ISSUE_DATE, @NIKBRANCH_CODE, @PAYEE_NAME, 
		@CHECK_SERIES, @CHECK_NUMBER, @CHECK_NO, @BOOK_NO, @CHECK_TYPE, @ACC_NO, 
		@DEBIT_CREDIT, @REMARK, @BATCH_NO, @CHECK_REF, @ENTRY_LOC, @DS_CODE, 
		'O', 0,
		1,0,@VALUE_TYPE,@IS_ROW_CHG);

	SELECT @ErrorVar = @@ERROR;
	
	IF @ErrorVar <> 0
		BEGIN			
			RETURN 1;
		END
		
	RETURN 0;
	   
END

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 17-Apr-13
-- Description:	update detail to CheckTotal
-- =============================================

ALTER PROCEDURE [dbo].[CMS_CheckTotal_Update]
	@MID			numeric(10,0),
	@DS_CODE		varchar(8), 
	@TOTAL_CHKNO	int, 
	@TOTAL_CHKAMT	numeric(14,2), 
	@OPR_DATE		datetime, 
	@CUSTOMER_REF	varchar(50), 
	@ENTRY_LOC		varchar(3),
	@MOD_NO			int,
	@RET_MOD_NO		int output
AS
BEGIN	
	DECLARE @ErrorVar INT;
	DECLARE @ENTRY_DATE datetime;
	
	SET NOCOUNT ON;

	IF EXISTS(SELECT DS_CODE FROM CHECKTOTAL 
				WHERE  MID=@MID AND MOD_NO=@MOD_NO)
		BEGIN

			SELECT @ENTRY_DATE=ENTRY_DATE FROM CHECKTOTAL 
				WHERE MID=@MID AND MOD_NO=@MOD_NO;

			DELETE CHECKTOTAL_HIST WHERE MID=@MID AND IS_AUTH=0;

			SELECT @ErrorVar = @@ERROR;		

			IF @ErrorVar <> 0
				BEGIN					
					RETURN 1;
				END
			
			SELECT @RET_MOD_NO = @MOD_NO +1;
			
			INSERT INTO CHECKTOTAL_HIST(MID,DS_CODE, TOTAL_CHKNO, TOTAL_CHKAMT, 
				OPR_DATE, CUSTOMER_REF, ENTRY_LOC, ENTRY_DATE,
				INPUT_BY,INPUT_DATETIME,INPUT_FROM,MOD_NO,[STATUS],IS_AUTH)
				VALUES(@MID,@DS_CODE, @TOTAL_CHKNO, @TOTAL_CHKAMT, 
				@OPR_DATE, @CUSTOMER_REF, @ENTRY_LOC, @ENTRY_DATE, 
				substring(suser_name(),charindex('\',suser_name())+1,20),
				GETDATE(),HOST_NAME(),@RET_MOD_NO,'U',0);

			SELECT @ErrorVar = @@ERROR;

			IF @ErrorVar <> 0
				BEGIN
					RETURN 1;
				END				
			
			DELETE CLEARINGTAB_HIST
				WHERE MID=@MID AND IS_AUTH=0;

			SELECT @ErrorVar = @@ERROR;

			IF @ErrorVar <> 0
				BEGIN
					RETURN 1;
				END
			
			RETURN 0;

				
		END
	ELSE -- might be in hist table
		BEGIN

			IF EXISTS(SELECT DS_CODE from CHECKTOTAL_HIST 
						WHERE MID=@MID AND MOD_NO=@MOD_NO AND IS_AUTH=0)
				BEGIN

					SELECT @ENTRY_DATE=ENTRY_DATE FROM CHECKTOTAL_HIST 
						WHERE MID=@MID AND MOD_NO=@MOD_NO AND IS_AUTH=0;

					DELETE CHECKTOTAL_HIST WHERE 
						MID=@MID AND IS_AUTH=0;

					SELECT @ErrorVar = @@ERROR;		

					IF @ErrorVar <> 0
						BEGIN							
							RETURN 1;
						END

					INSERT INTO CHECKTOTAL_HIST(MID,DS_CODE, TOTAL_CHKNO, TOTAL_CHKAMT, 
						OPR_DATE, CUSTOMER_REF, ENTRY_LOC, ENTRY_DATE,
						INPUT_BY,INPUT_DATETIME,INPUT_FROM,MOD_NO,[STATUS],IS_AUTH)
						VALUES(@MID,@DS_CODE, @TOTAL_CHKNO, @TOTAL_CHKAMT, 
						@OPR_DATE, @CUSTOMER_REF, @ENTRY_LOC, @ENTRY_DATE,
						substring(suser_name(),charindex('\',suser_name())+1,20),
						GETDATE(),HOST_NAME(),@MOD_NO,'U',0);

					SELECT @ErrorVar = @@ERROR;
		
					IF @ErrorVar <> 0
						BEGIN							
							RETURN 1;
						END
					
					SELECT @RET_MOD_NO=@MOD_NO;

					DELETE CLEARINGTAB_HIST
						WHERE MID=@MID AND IS_AUTH=0;

					SELECT @ErrorVar = @@ERROR;

					IF @ErrorVar <> 0
						BEGIN
							RETURN 1;
						END			
					
					RETURN 0;
			
				END
			ELSE
				BEGIN
					-- not exist
					
					RETURN 4;
				END

		END
    
END

GO




-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 17-Apr-13
-- Description:	update detail to ClearingTab
-- =============================================
ALTER PROCEDURE [dbo].[CMS_ClearingTab_Update]
	@MID			numeric(10,0),
	@DSL			numeric(4,0),		
	@OPR_DATE		datetime, 
	@ISSUE_DATE		datetime, 
	@NIKBRANCH_CODE	varchar(7), 
	@PAYEE_NAME		varchar(40), 
	@CHECK_SERIES	varchar(4), 
	@CHECK_NUMBER	varchar(15), 
	@CHECK_NO		varchar(8), 
	@BOOK_NO		varchar(8), 
	@CHECK_TYPE		varchar(8), 
	@ACC_NO			varchar(15), 
	@DEBIT_CREDIT	numeric(14,2), 
	@REMARK			varchar(15), 
	@BATCH_NO		varchar(8), 
	@CHECK_REF		varchar(40), 
	@ENTRY_LOC		varchar(3), 
	@DS_CODE		varchar(8),
	@RTN_STATUS		char(1), 
	@RTN_CODE		varchar(2), 
	@RETURN_DATE	datetime, 
	@CHECKED		tinyint, 
	@FLEX_FILENAME	varchar(15), 
	@IS_PDC			bit,
	@VALUE_TYPE		numeric(1,0), 
	@IS_ROW_CHG		bit,
	@MOD_NO			numeric(3,0) 
AS
BEGIN	

	DECLARE @ErrorVar	int;
		
	SET NOCOUNT ON;
			
	INSERT INTO CLEARINGTAB_HIST(MID,DSL,OPR_DATE, ISSUE_DATE, NIKBRANCH_CODE, PAYEE_NAME, 
		CHECK_SERIES, CHECK_NUMBER, CHECK_NO, BOOK_NO, CHECK_TYPE, ACC_NO, 
		DEBIT_CREDIT, REMARK, BATCH_NO, CHECK_REF, ENTRY_LOC, DS_CODE, 
		RTN_STATUS, RTN_CODE, RETURN_DATE, CHECKED, FLEX_FILENAME, IS_PDC,
		MOD_NO,IS_AUTH,VALUE_TYPE,IS_ROW_CHG)
		VALUES(@MID,@DSL,@OPR_DATE, @ISSUE_DATE, @NIKBRANCH_CODE, @PAYEE_NAME, 
		@CHECK_SERIES, @CHECK_NUMBER, @CHECK_NO, @BOOK_NO, @CHECK_TYPE, @ACC_NO, 
		@DEBIT_CREDIT, @REMARK, @BATCH_NO, @CHECK_REF, @ENTRY_LOC, @DS_CODE, 
		@RTN_STATUS, @RTN_CODE, @RETURN_DATE, @CHECKED, @FLEX_FILENAME, @IS_PDC,
		@MOD_NO,0,@VALUE_TYPE,@IS_ROW_CHG);

	SELECT @ErrorVar = @@ERROR;
	
	IF @ErrorVar <> 0
		BEGIN			
			RETURN 1;
		END
		
	RETURN 0;
	   
END

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 18-Apr-13
-- Description:	Get detail of CHECKTOTAL
-- =============================================
ALTER PROCEDURE [dbo].[CMS_CheckTotal_GetDetail]	
	@MID		numeric(10,0),
	@MOD_NO		int	
AS
BEGIN	
	
	SET NOCOUNT ON;

	IF EXISTS( SELECT DS_CODE 
				FROM CHECKTOTAL 
				WHERE MID=@MID AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT *,'IS_AUTH'=1 
				FROM CHECKTOTAL 
				WHERE MID=@MID AND MOD_NO = @MOD_NO
		END	
	ELSE
		BEGIN
			SELECT * 
				FROM CHECKTOTAL_HIST
				WHERE MID=@MID AND MOD_NO = @MOD_NO
		END
END

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 18-Apr-13
-- Description:	Get Total # of modification of CheckTotal
-- =============================================
ALTER PROCEDURE [dbo].[CMS_CheckTotal_GetMaxMod]
	@MID	numeric(10,0)
AS
BEGIN	

	DECLARE @Max1	int,
			@Max2	int;

	SET NOCOUNT ON;
	
	SELECT @Max1=0,@Max2=0;

	SELECT @Max1=ISNULL(MAX(MOD_NO),0) FROM CHECKTOTAL_HIST 
		WHERE MID=@MID AND IS_AUTH=0;
		
	IF @Max1=0
		BEGIN
			SELECT @Max2=ISNULL(MAX(MOD_NO),0) FROM CHECKTOTAL
				WHERE MID=@MID;
			SELECT @Max2;
			RETURN 0;			
		END
	
	SELECT @Max1;
	RETURN 0;

END

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 18-Apr-13
-- Description:	Get detail of ClearingTab
-- =============================================
ALTER PROCEDURE [dbo].[CMS_ClearingTab_GetDetails]	
	@MID		numeric(10,0),
	@MOD_NO		int
AS
BEGIN	
	
	SET NOCOUNT ON;

	IF EXISTS( SELECT DS_CODE 
			   FROM CLEARINGTAB WHERE MID=@MID AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT ct.*,'IS_AUTH'=1,
				cb.BRANCH_NAME AS 'ENTRY_LOC_NAME',br.BRANCH_NAME,
				b.BANK_CODE,b.BANK_NAME,cl.ACC_NAME, ctp.CHECKTYPE_NAME
			FROM CLEARINGTAB ct
				LEFT OUTER JOIN CITIBANK_BRANCH cb
				ON cb.BRANCH_CODE=ct.ENTRY_LOC				
				LEFT OUTER JOIN CLEARING_BRANCH br
				ON br.NIKBRANCH_CODE=ct.NIKBRANCH_CODE
				LEFT OUTER JOIN CLEARING_BANK b
				ON b.BANK_CODE=br.BANK_CODE
				LEFT OUTER JOIN CLEARING_CLIENT cl
				ON cl.ACC_NO=ct.REMARK
				LEFT OUTER JOIN CHECKTYPE ctp
				ON ctp.CHECKTYPE_CODE=ct.CHECK_TYPE
			WHERE ct.MID=@MID AND ct.MOD_NO = @MOD_NO			
		END	
	ELSE
		BEGIN
			SELECT cth.* ,
				cb.BRANCH_NAME AS 'ENTRY_LOC_NAME',br.BRANCH_NAME,
				b.BANK_CODE,b.BANK_NAME,cl.ACC_NAME, ctp.CHECKTYPE_NAME
			FROM CLEARINGTAB_HIST cth
				LEFT OUTER JOIN CITIBANK_BRANCH cb
				ON cb.BRANCH_CODE=cth.ENTRY_LOC				
				LEFT OUTER JOIN CLEARING_BRANCH br
				ON br.NIKBRANCH_CODE=cth.NIKBRANCH_CODE
				LEFT OUTER JOIN CLEARING_BANK b
				ON b.BANK_CODE=br.BANK_CODE
				LEFT OUTER JOIN CLEARING_CLIENT cl
				ON cl.ACC_NO=cth.REMARK
				LEFT OUTER JOIN CHECKTYPE ctp
				ON ctp.CHECKTYPE_CODE=cth.CHECK_TYPE
			WHERE cth.MID=@MID AND cth.MOD_NO = @MOD_NO			
		END
END

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 14-Aug-13
-- Description:	Get detail of CHECKTOTAL by code
-- =============================================
CREATE PROCEDURE [dbo].[CMS_CheckTotal_GetDetailByCode]	
	@DS_CODE	varchar(8),
	@OPR_DATE	datetime,
	@ENTRY_LOC	varchar(3)
AS
BEGIN	
	
	SET NOCOUNT ON;

	IF EXISTS( SELECT DS_CODE 
				FROM CHECKTOTAL 
				WHERE DS_CODE=@DS_CODE AND OPR_DATE=@OPR_DATE
				AND ENTRY_LOC=@ENTRY_LOC)
		BEGIN
			SELECT *,'IS_AUTH'=1 
				FROM CHECKTOTAL 
				WHERE DS_CODE=@DS_CODE AND OPR_DATE=@OPR_DATE
				AND ENTRY_LOC=@ENTRY_LOC;
		END	
	ELSE
		BEGIN
			SELECT * 
				FROM CHECKTOTAL_HIST
				WHERE DS_CODE=@DS_CODE AND OPR_DATE=@OPR_DATE
				AND ENTRY_LOC=@ENTRY_LOC AND IS_AUTH=0;
		END
END

GO


GRANT EXECUTE ON [dbo].[CMS_CheckTotal_GetDetailByCode] TO [ccms_sp_only]

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 15-Jul-13
-- Description:	Get detail to CheckTotal table
-- =============================================
ALTER PROCEDURE [dbo].[CMS_CheckTotal_GetDetailList]		
	@DEL_FLAG	int	,
	@AUTH_FLAG	bit,
	@ENTRY_DATE	datetime,
	@ENTRY_LOC	varchar(3)
AS
BEGIN	
		
	SET NOCOUNT ON;


	IF @AUTH_FLAG=0
		BEGIN						
			SELECT ch.*,'S' = 'U',cb.BRANCH_NAME
				FROM CHECKTOTAL_HIST ch
				LEFT OUTER JOIN CITIBANK_BRANCH cb
				ON cb.BRANCH_CODE=ch.ENTRY_LOC
				WHERE ch.IS_AUTH=0 AND ch.ENTRY_LOC=@ENTRY_LOC
				ORDER BY ch.DS_CODE;			
		END;
	ELSE
		BEGIN
			IF @DEL_FLAG=0
				BEGIN
					SELECT *,1,'S' = 'A',cb.BRANCH_NAME				
						FROM CHECKTOTAL ct
						LEFT OUTER JOIN CITIBANK_BRANCH cb
						ON cb.BRANCH_CODE=ct.ENTRY_LOC
						WHERE ct.STATUS ='L' AND ct.ENTRY_LOC=@ENTRY_LOC
						AND ct.ENTRY_DATE=@ENTRY_DATE
						ORDER BY ct.DS_CODE;
				END;
			ELSE
				BEGIN
					SELECT *,1,'S' = 
						CASE  
							WHEN ct.STATUS = 'D' THEN 'D'                    
							ELSE 'A'
						END ,cb.BRANCH_NAME	
						FROM CHECKTOTAL ct
						LEFT OUTER JOIN CITIBANK_BRANCH cb
						ON cb.BRANCH_CODE=ct.ENTRY_LOC
						WHERE ct.STATUS IN ('L','D')
						AND ct.ENTRY_LOC=@ENTRY_LOC
						AND ct.ENTRY_DATE=@ENTRY_DATE
						ORDER BY DS_CODE;
				END;
		END;	
	   
END

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 20-Apr-13
-- Description:	Remove record from CheckTotal
-- =============================================
ALTER PROCEDURE [dbo].[CMS_CheckTotal_Remove]
	@MID		numeric(10,0),
	@MOD_NO		int,	
	@RET_MOD_NO	int output
AS
BEGIN	
	DECLARE @STATUS			char(1),
			@DS_CODE		varchar(8),
			@OPR_DATE		datetime,
			@ENTRY_LOC		varchar(3),
			@TOTAL_CHKNO	int, 
			@TOTAL_CHKAMT	numeric(14,2), 
			@CUSTOMER_REF	varchar(50),
			@INPUT_BY		varchar(20),
			@INPUT_DATETIME datetime,
			@INPUT_FROM		varchar(30),
			@ENTRY_DATE		datetime;
	
	DECLARE @ErrorVar		int; 
			
	SET NOCOUNT ON;

	SET @STATUS = '';

	BEGIN TRANSACTION

	IF EXISTS(SELECT DS_CODE from CHECKTOTAL
			  WHERE MID=@MID AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT @STATUS=[STATUS],
				@DS_CODE=DS_CODE,@OPR_DATE=OPR_DATE,@ENTRY_LOC=ENTRY_LOC,
				@TOTAL_CHKNO=TOTAL_CHKNO,@TOTAL_CHKAMT=TOTAL_CHKAMT,
				@CUSTOMER_REF=CUSTOMER_REF,@ENTRY_DATE=ENTRY_DATE,
				@INPUT_BY=INPUT_BY,	@INPUT_DATETIME=INPUT_DATETIME,
				@INPUT_FROM=INPUT_FROM
				FROM CHECKTOTAL
				WHERE MID=@MID AND MOD_NO=@MOD_NO;
			
			IF (@STATUS = 'D')
				BEGIN
					-- already deleted
					ROLLBACK TRANSACTION;
					RETURN 6;
				END;

			DELETE CHECKTOTAL_HIST WHERE MID=@MID AND IS_AUTH=0;

			SELECT @ErrorVar = @@ERROR;		

			IF @ErrorVar <> 0				
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			SELECT @RET_MOD_NO = @MOD_NO + 1;

			INSERT INTO 
				CHECKTOTAL_HIST (MID,DS_CODE, TOTAL_CHKNO, TOTAL_CHKAMT, OPR_DATE, 
				CUSTOMER_REF, ENTRY_LOC,ENTRY_DATE, 
				INPUT_BY, INPUT_DATETIME, INPUT_FROM, MOD_NO, 
				[STATUS], IS_AUTH)
				VALUES(@MID, @DS_CODE, @TOTAL_CHKNO, @TOTAL_CHKAMT, @OPR_DATE, 
				@CUSTOMER_REF, @ENTRY_LOC, @ENTRY_DATE,
				substring(suser_name(),charindex('\',suser_name())+1,20), 
				GETDATE(), HOST_NAME(), @RET_MOD_NO, 
				'D', 0)

			SELECT @ErrorVar = @@ERROR;		

			IF @ErrorVar <> 0				
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END


-----------

			DELETE CLEARINGTAB_HIST
				WHERE MID=@MID AND IS_AUTH=0 ;

			SELECT @ErrorVar = @@error;

			IF @ErrorVar <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			INSERT INTO CLEARINGTAB_HIST(MID,DSL,OPR_DATE, ISSUE_DATE, NIKBRANCH_CODE, 
				PAYEE_NAME, CHECK_SERIES, CHECK_NUMBER, CHECK_NO, BOOK_NO, 
				CHECK_TYPE, ACC_NO, DEBIT_CREDIT, REMARK, BATCH_NO, CHECK_REF,
				ENTRY_LOC, DS_CODE, RTN_STATUS, RTN_CODE, RETURN_DATE, 
				CHECKED, FLEX_FILENAME, IS_PDC, MOD_NO, IS_AUTH,VALUE_TYPE,IS_ROW_CHG)
				SELECT MID,DSL,OPR_DATE, ISSUE_DATE, NIKBRANCH_CODE, 
				PAYEE_NAME, CHECK_SERIES, CHECK_NUMBER, CHECK_NO, BOOK_NO, 
				CHECK_TYPE, ACC_NO, DEBIT_CREDIT, REMARK, BATCH_NO, CHECK_REF,
				ENTRY_LOC, DS_CODE, RTN_STATUS, RTN_CODE, RETURN_DATE, 
				CHECKED, FLEX_FILENAME, IS_PDC, @RET_MOD_NO, 0,VALUE_TYPE,IS_ROW_CHG
				FROM CLEARINGTAB
				WHERE MID=@MID AND MOD_NO=@MOD_NO;
			
			SELECT @ErrorVar = @@error;

			IF @ErrorVar <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			
-----------
			

			COMMIT TRANSACTION;
			RETURN 0;
				
		END;
	ELSE 
		BEGIN			
			-- item might exist in hist table
			IF EXISTS(SELECT DS_CODE from CHECKTOTAL_HIST 
						WHERE MID=@MID AND MOD_NO=@MOD_NO )
				BEGIN
					DELETE CHECKTOTAL_HIST
						WHERE MID=@MID AND MOD_NO=@MOD_NO AND IS_AUTH=0;

					SELECT @ErrorVar = @@ERROR;		

					IF @ErrorVar <> 0				
						BEGIN
							ROLLBACK TRANSACTION;
							RETURN 1;
						END
					
					DELETE CLEARINGTAB_HIST 
						WHERE MID=@MID AND MOD_NO=@MOD_NO AND IS_AUTH=0 ;
					
					SELECT @ErrorVar = @@ERROR;		

					IF @ErrorVar <> 0				
						BEGIN
							ROLLBACK TRANSACTION;
							RETURN 1;
						END
	
					SELECT @RET_MOD_NO = @MOD_NO-1;

					COMMIT TRANSACTION;
					RETURN 0;			


				END
			ELSE
				BEGIN
					-- not exist
					ROLLBACK TRANSACTION;
					RETURN 4;
				END
			
		END		
    
END

GO





-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 20-Apr-13
-- Description:	Authorize record to CHECKTOTAL
-- =============================================
ALTER PROCEDURE [dbo].[CMS_CheckTotal_Auth]	
	@MID			numeric(10,0),	
	@MOD_NO			int,
	@MOD_DATETIME	datetime
AS
BEGIN	
	DECLARE @STATUS			char(1),
			@DS_CODE		varchar(8),
			@OPR_DATE		datetime,
			@ENTRY_LOC		varchar(3),
			@TOTAL_CHKNO	int, 
			@TOTAL_CHKAMT	numeric(14,2), 
			@CUSTOMER_REF	varchar(50),		
			@INPUT_BY		varchar(20),
			@INPUT_DATETIME datetime,
			@INPUT_FROM		varchar(30),
			@LAST_MOD_NO	int,
			@IS_AUTH		bit;			
	
	DECLARE @ErrorVar1		int; 
			
	SET NOCOUNT ON;

	SELECT @STATUS = '';

	BEGIN TRANSACTION;

	IF EXISTS(SELECT DS_CODE from CHECKTOTAL_HIST 
			  WHERE MID=@MID AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT @STATUS=[STATUS],
				@DS_CODE=DS_CODE,@OPR_DATE=OPR_DATE,@ENTRY_LOC=ENTRY_LOC,
				@TOTAL_CHKNO=TOTAL_CHKNO, 
				@TOTAL_CHKAMT=TOTAL_CHKAMT,@CUSTOMER_REF=CUSTOMER_REF,
				@INPUT_BY=INPUT_BY,	@INPUT_DATETIME=INPUT_DATETIME,
				@INPUT_FROM=INPUT_FROM,@IS_AUTH=IS_AUTH
				FROM CHECKTOTAL_HIST 
				WHERE MID=@MID AND MOD_NO=@MOD_NO;
			IF (@IS_AUTH = 1)
				BEGIN
					-- already authorized
					ROLLBACK TRANSACTION;
					RETURN 3;
				END;
			IF (@INPUT_BY = substring(suser_name(),charindex('\',suser_name())+1,20))
				BEGIN
					-- maker and checker same person
					ROLLBACK TRANSACTION;
					RETURN 5;
				END;
			IF (@INPUT_DATETIME <> @MOD_DATETIME)
				BEGIN
					-- Data hase been changed. Need notification
					ROLLBACK TRANSACTION;
					RETURN 7;
				END;			
		END;
	ELSE
		BEGIN			
			-- not exist
			ROLLBACK TRANSACTION;
			RETURN 4;
		END	;

	IF @MOD_NO > 1
		BEGIN	
		
			INSERT INTO CHECKTOTAL_HIST(MID, DS_CODE, TOTAL_CHKNO, TOTAL_CHKAMT, 
				OPR_DATE,CUSTOMER_REF, ENTRY_LOC, ENTRY_DATE, 
				INPUT_BY, INPUT_DATETIME, INPUT_FROM, AUTH_BY, AUTH_DATETIME, AUTH_FROM, 
				MOD_NO, [STATUS], IS_AUTH)
				SELECT MID, DS_CODE, TOTAL_CHKNO, TOTAL_CHKAMT, 
				OPR_DATE, CUSTOMER_REF, ENTRY_LOC, ENTRY_DATE, 
				INPUT_BY, INPUT_DATETIME, INPUT_FROM, AUTH_BY, AUTH_DATETIME, AUTH_FROM, 
				MOD_NO, [STATUS],1 FROM CHECKTOTAL
				WHERE MID=@MID;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END


			UPDATE CHECKTOTAL_HIST
				SET [STATUS] = 'O' 
				WHERE MID=@MID
				AND [STATUS] = 'L';

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			IF @STATUS='U'
				BEGIN
					SELECT @STATUS='L';
				END

			UPDATE CHECKTOTAL
				SET
				DS_CODE=@DS_CODE,OPR_DATE=@OPR_DATE,ENTRY_LOC=@ENTRY_LOC,
				TOTAL_CHKNO=@TOTAL_CHKNO,
				TOTAL_CHKAMT=@TOTAL_CHKAMT,CUSTOMER_REF=@CUSTOMER_REF, 
				INPUT_BY=@INPUT_BY,	INPUT_DATETIME=@INPUT_DATETIME,
				INPUT_FROM=@INPUT_FROM,
				AUTH_BY=substring(suser_name(),charindex('\',suser_name())+1,20),
				AUTH_DATETIME=GETDATE(),AUTH_FROM=HOST_NAME(),
				MOD_NO=@MOD_NO,[STATUS]=@STATUS
			WHERE DS_CODE=@DS_CODE AND OPR_DATE=@OPR_DATE
				AND ENTRY_LOC=@ENTRY_LOC;

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END
			
			DELETE CHECKTOTAL_HIST WHERE MID=@MID
				AND IS_AUTH=0;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END	

		END
	ELSE -- first record
		BEGIN  
			INSERT INTO CHECKTOTAL(MID, DS_CODE, TOTAL_CHKNO, TOTAL_CHKAMT, OPR_DATE, 
				CUSTOMER_REF, ENTRY_LOC, ENTRY_DATE, 
				INPUT_BY, INPUT_DATETIME, INPUT_FROM, 
				AUTH_BY, 
				AUTH_DATETIME, AUTH_FROM, MOD_NO, [STATUS])
				SELECT MID,DS_CODE, TOTAL_CHKNO, TOTAL_CHKAMT, OPR_DATE, 
					CUSTOMER_REF, ENTRY_LOC,ENTRY_DATE,
					INPUT_BY, INPUT_DATETIME, INPUT_FROM, 
					substring(suser_name(),charindex('\',suser_name())+1,20), 
					GETDATE(), HOST_NAME(), MOD_NO, 'L' 
					FROM CHECKTOTAL_HIST
					WHERE MID=@MID AND MOD_NO=@MOD_NO;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			DELETE CHECKTOTAL_HIST WHERE MID=@MID
				AND IS_AUTH=0;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END			
					
		END
	
	-- Now update CLEARINGTAB

	INSERT INTO CLEARINGTAB_HIST(MID,DSL,OPR_DATE, ISSUE_DATE, NIKBRANCH_CODE, 
		PAYEE_NAME, CHECK_SERIES, CHECK_NUMBER, CHECK_NO, BOOK_NO, 
		CHECK_TYPE, ACC_NO, DEBIT_CREDIT, REMARK, BATCH_NO, CHECK_REF, 
		ENTRY_LOC, DS_CODE, RTN_STATUS, RTN_CODE, RETURN_DATE, CHECKED, 
		FLEX_FILENAME, IS_PDC, MOD_NO, IS_AUTH,VALUE_TYPE,IS_ROW_CHG)
		SELECT MID,DSL,OPR_DATE, ISSUE_DATE, NIKBRANCH_CODE, 
		PAYEE_NAME, CHECK_SERIES, CHECK_NUMBER, CHECK_NO, BOOK_NO, 
		CHECK_TYPE, ACC_NO, DEBIT_CREDIT, REMARK, BATCH_NO, CHECK_REF, 
		ENTRY_LOC, DS_CODE, RTN_STATUS, RTN_CODE, RETURN_DATE, CHECKED, 
		FLEX_FILENAME, IS_PDC, MOD_NO, 1,VALUE_TYPE,IS_ROW_CHG
		FROM CLEARINGTAB
		WHERE MID=@MID;
	
	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END
	
	DELETE CLEARINGTAB WHERE MID=@MID;

	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END

	INSERT INTO CLEARINGTAB(MID,DSL,OPR_DATE, ISSUE_DATE, NIKBRANCH_CODE, 
		PAYEE_NAME, CHECK_SERIES, CHECK_NUMBER, CHECK_NO, BOOK_NO, 
		CHECK_TYPE, ACC_NO, DEBIT_CREDIT, REMARK, BATCH_NO, CHECK_REF, 
		ENTRY_LOC, DS_CODE, RTN_STATUS, RTN_CODE, RETURN_DATE, CHECKED, 
		FLEX_FILENAME, IS_PDC, MOD_NO,VALUE_TYPE,IS_ROW_CHG)
		SELECT MID,DSL,OPR_DATE, ISSUE_DATE, NIKBRANCH_CODE, 
		PAYEE_NAME, CHECK_SERIES, CHECK_NUMBER, CHECK_NO, BOOK_NO, 
		CHECK_TYPE, ACC_NO, DEBIT_CREDIT, REMARK, BATCH_NO, CHECK_REF, 
		ENTRY_LOC, DS_CODE, RTN_STATUS, RTN_CODE, RETURN_DATE, CHECKED, 
		FLEX_FILENAME, IS_PDC, MOD_NO,VALUE_TYPE,IS_ROW_CHG
		FROM CLEARINGTAB_HIST 
		WHERE MID=@MID AND MOD_NO=@MOD_NO;
	
	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END	

	DELETE CLEARINGTAB_HIST WHERE MID=@MID AND MOD_NO=@MOD_NO;

	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END
	
	COMMIT TRANSACTION;
		
	SELECT @ErrorVar1 = @@error;
		
	IF @ErrorVar1 = 0
		BEGIN		
			RETURN 0;
		END
	ELSE
		BEGIN
			RETURN 1;
		END

    
END

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 13-Nov-12
-- Description:	Authorize record to Citibank_branch table
-- =============================================
ALTER PROCEDURE [dbo].[CMS_CitiBankBranch_Auth]	
	@BRANCH_CODE	varchar(3),	
	@MOD_NO			int,
	@MOD_DATETIME	datetime
AS
BEGIN	
	DECLARE @STATUS			char(1),
			@BRANCH_NAME	varchar(35),
			@ADDRESS1 		varchar(35),
			@ADDRESS2 		varchar(35),
			@CLEARING_DEBIT_ACC varchar(20),			
			@INPUT_BY		varchar(20),
			@INPUT_DATETIME datetime,
			@INPUT_FROM		varchar(30),
			@AUTH_BY		varchar(20),
			@AUTH_DATETIME	datetime,
			@AUTH_FROM		varchar(30),
			@LAST_MOD_NO	int,
			@IS_AUTH		bit;			
	
	DECLARE @ErrorVar1		int; 
			

	SET NOCOUNT ON;

	SELECT @STATUS = '';

	BEGIN TRANSACTION

	IF EXISTS(SELECT BRANCH_CODE from CITIBANK_BRANCH_HIST 
			  WHERE BRANCH_CODE=@BRANCH_CODE AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT @STATUS=[STATUS],@BRANCH_NAME=BRANCH_NAME,
				@ADDRESS1=ADDRESS1,@ADDRESS2=ADDRESS2,
				@CLEARING_DEBIT_ACC=CLEARING_DEBIT_ACC,		
				@INPUT_BY=INPUT_BY,	@INPUT_DATETIME=INPUT_DATETIME,
				@INPUT_FROM=INPUT_FROM,@IS_AUTH=IS_AUTH
				FROM CITIBANK_BRANCH_HIST 
				WHERE BRANCH_CODE=@BRANCH_CODE AND MOD_NO=@MOD_NO;
			IF (@IS_AUTH = 1)
				BEGIN
					-- already authorized
					ROLLBACK TRANSACTION;
					RETURN 3;
				END;
			IF (@INPUT_BY = substring(suser_name(),charindex('\',suser_name())+1,20))
				BEGIN
					-- maker and checker same person
					ROLLBACK TRANSACTION;
					RETURN 5;
				END;
			IF (@INPUT_DATETIME <> @MOD_DATETIME)
				BEGIN
					-- Data hase been changed. Need notification
					ROLLBACK TRANSACTION;
					RETURN 7;
				END;			
		END;
	ELSE
		BEGIN			
			-- not exist
			ROLLBACK TRANSACTION;
			RETURN 4;
		END	;

	IF @MOD_NO > 1
		BEGIN	
		
			INSERT INTO CITIBANK_BRANCH_HIST(BRANCH_CODE, BRANCH_NAME, 
				ADDRESS1, ADDRESS2, 
				INPUT_BY, INPUT_DATETIME, INPUT_FROM, 
				AUTH_BY, AUTH_DATETIME, AUTH_FROM, MOD_NO, 
				[STATUS], IS_AUTH, CLEARING_DEBIT_ACC) 
				SELECT BRANCH_CODE, BRANCH_NAME, 
				ADDRESS1, ADDRESS2, 
				INPUT_BY, INPUT_DATETIME, INPUT_FROM, 
				AUTH_BY, AUTH_DATETIME, AUTH_FROM, MOD_NO, 
				[STATUS], 1, CLEARING_DEBIT_ACC FROM CITIBANK_BRANCH
				WHERE BRANCH_CODE=@BRANCH_CODE;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END


			UPDATE CITIBANK_BRANCH_HIST
				SET [STATUS] = 'O' 
				WHERE BRANCH_CODE=@BRANCH_CODE 
				AND [STATUS] = 'L';

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			IF @STATUS='U'
				BEGIN
					SELECT @STATUS='L';
				END

			UPDATE CITIBANK_BRANCH
				SET BRANCH_NAME=@BRANCH_NAME,
				ADDRESS1=@ADDRESS1,ADDRESS2=@ADDRESS2,
				CLEARING_DEBIT_ACC=@CLEARING_DEBIT_ACC,				
				INPUT_BY=@INPUT_BY,	INPUT_DATETIME=@INPUT_DATETIME,
				INPUT_FROM=@INPUT_FROM,
				AUTH_BY=substring(suser_name(),charindex('\',suser_name())+1,20),
				AUTH_DATETIME=GETDATE(),AUTH_FROM=HOST_NAME(),
				MOD_NO=@MOD_NO,[STATUS]=@STATUS
			WHERE BRANCH_CODE=@BRANCH_CODE;

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END
			
			DELETE CITIBANK_BRANCH_HIST WHERE BRANCH_CODE=@BRANCH_CODE
				AND IS_AUTH=0;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END	

		END
	ELSE -- first record
		BEGIN
			INSERT INTO CITIBANK_BRANCH(BRANCH_CODE, BRANCH_NAME, ADDRESS1, ADDRESS2, 
				INPUT_BY, INPUT_DATETIME, INPUT_FROM, 
				AUTH_BY, 
				AUTH_DATETIME, AUTH_FROM, MOD_NO, [STATUS], CLEARING_DEBIT_ACC)
				SELECT BRANCH_CODE, BRANCH_NAME, ADDRESS1, ADDRESS2,
					INPUT_BY, INPUT_DATETIME, INPUT_FROM, 
					substring(suser_name(),charindex('\',suser_name())+1,20), 
					GETDATE(), HOST_NAME(), MOD_NO, 'L' ,CLEARING_DEBIT_ACC
					FROM CITIBANK_BRANCH_HIST
					WHERE BRANCH_CODE=@BRANCH_CODE AND MOD_NO=@MOD_NO;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			DELETE CITIBANK_BRANCH_HIST WHERE BRANCH_CODE=@BRANCH_CODE
				AND IS_AUTH=0;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END			
					
		END

		COMMIT TRANSACTION
		
		SELECT @ErrorVar1 = @@error;
		
		IF @ErrorVar1 = 0
			BEGIN		
				RETURN 0;
			END
		ELSE
			BEGIN
				RETURN 1;
			END
    
END

GO



ALTER TABLE dbo.GENPRM
ADD OPR_DATE datetime;

GO


-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 14-Aug-13
-- Description:	Get detail of GENPRM table
-- =============================================
CREATE PROCEDURE [dbo].[CMS_GenPrm_SetClearDate]	
	@OPR_DATE	datetime
AS
BEGIN	

	UPDATE	GENPRM SET OPR_DATE=@OPR_DATE;
	
END

GO

GRANT EXECUTE ON [dbo].[CMS_GenPrm_SetClearDate] TO [ccms_sp_only]

GO















