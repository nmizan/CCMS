ALTER TABLE CCHECK
ADD [STATUS] char (1) NULL; 
GO


UPDATE CCHECK SET [STATUS]=ct.STATUS 
FROM CCHECKTOTAL ct INNER JOIN CCHECK cc 
ON ct.D_CODE=cc.D_CODE

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 08-Jan-15
-- Description:	get detail of CCHECK
-- =============================================
CREATE PROCEDURE [dbo].[CMS_CCheck_GetFilterData]	
	@D_CODE				varchar(12), 
	@CLIENT_CODE		varchar(6), 
	@DLOCATION_CODE		varchar(4), 	
	@SLIP_DATE_FROM		datetime, 
	@SLIP_DATE_TO		datetime, 
	@VALUE_DATE_FROM	datetime, 
	@VALUE_DATE_TO		datetime, 
	@CHECK_NO			varchar(15), 
	@AMOUNT				numeric(12,2), 		
	@DRAWEE_BANK_CODE	varchar(4),	
	@BRANCH_CODE		varchar(4),
	@NONZONE_REF		varchar(7)	
AS
BEGIN	
		
	SET NOCOUNT ON;
	
	DECLARE @query1 as nvarchar(2000);			
		
	SET @query1 = 'SELECT cc.*,cl.ACC_NO,cl.ACC_NAME, lo.LOCATION_NAME,ba.BANK_NAME,br.BRANCH_NAME 
		FROM dbo.CCHECK cc
		LEFT OUTER JOIN CLIENT cl
		ON cc.CLIENT_CODE=cl.CLIENT_CODE 
		LEFT OUTER JOIN dbo.BANK ba 
		ON cc.DRAWEE_BANK_CODE=ba.BANK_CODE 
		LEFT OUTER JOIN dbo.BRANCH br 
		ON cc.BRANCH_CODE=br.BRANCH_CODE AND cc.DRAWEE_BANK_CODE=br.BANK_CODE
		LEFT OUTER JOIN dbo.LOCATION lo
		ON cc.DLOCATION_CODE=lo.LOCATION_CODE 
		WHERE cc.[STATUS]=''L''';
		
	IF @D_CODE<>'' 
	BEGIN
		SET @query1=@query1 + ' AND D_CODE=@D_CODE ';		
	END
	
	IF @CLIENT_CODE<>'' 
	BEGIN
		SET @query1=@query1 + ' AND cc.CLIENT_CODE=@CLIENT_CODE ';		
	END
	
	IF @DLOCATION_CODE<>'' 
	BEGIN
		SET @query1=@query1 + ' AND DLOCATION_CODE=@DLOCATION_CODE ';		
	END
	
	IF (@SLIP_DATE_FROM IS NOT NULL) AND (@SLIP_DATE_TO IS NOT NULL)
	BEGIN
		SET @query1=@query1 + ' AND SLIP_DATE>=@SLIP_DATE_FROM AND SLIP_DATE<=@SLIP_DATE_TO ';			
	END
	
	IF (@VALUE_DATE_FROM IS NOT NULL) AND (@VALUE_DATE_TO IS NOT NULL)
	BEGIN
		SET @query1=@query1 + ' AND VALUE_DATE>=@VALUE_DATE_FROM AND VALUE_DATE<=@VALUE_DATE_TO ';			
	END
	
	IF @CHECK_NO<>'' 
	BEGIN
		SET @query1=@query1 + ' AND CHECK_NO=@CHECK_NO ';		
	END
	
	IF @AMOUNT<>0 
	BEGIN
		SET @query1=@query1 + ' AND AMOUNT=@AMOUNT ';		
	END	
	
	IF @DRAWEE_BANK_CODE<>'' 
	BEGIN
		SET @query1=@query1 + ' AND DRAWEE_BANK_CODE=@DRAWEE_BANK_CODE ';		
	END
	
	IF @BRANCH_CODE<>'' 
	BEGIN
		SET @query1=@query1 + ' AND cc.BRANCH_CODE=@BRANCH_CODE ';		
	END
	
	IF @NONZONE_REF<>'' 
	BEGIN
		SET @query1=@query1 + ' AND NONZONE_REF=@NONZONE_REF ';		
	END	
	
	EXEC sp_executesql @query1,N'@D_CODE				varchar(12), 
	@CLIENT_CODE		varchar(6), 
	@DLOCATION_CODE		varchar(4), 	
	@SLIP_DATE_FROM		datetime, 
	@SLIP_DATE_TO		datetime, 
	@VALUE_DATE_FROM	datetime, 
	@VALUE_DATE_TO		datetime, 
	@CHECK_NO			varchar(15), 
	@AMOUNT				numeric(12,2), 		
	@DRAWEE_BANK_CODE	varchar(4),	
	@BRANCH_CODE		varchar(4),
	@NONZONE_REF		varchar(7)' ,                    
                   @D_CODE=@D_CODE,@CLIENT_CODE=@CLIENT_CODE,
	@DLOCATION_CODE=@DLOCATION_CODE,
	@SLIP_DATE_FROM	=@SLIP_DATE_FROM,
	@SLIP_DATE_TO=@SLIP_DATE_TO,
	@VALUE_DATE_FROM=@VALUE_DATE_FROM,
	@VALUE_DATE_TO	=@VALUE_DATE_TO,
	@CHECK_NO	=@CHECK_NO,@AMOUNT = @AMOUNT,
	@DRAWEE_BANK_CODE=@DRAWEE_BANK_CODE,
	@BRANCH_CODE=@BRANCH_CODE,
	@NONZONE_REF=@NONZONE_REF

	   
END

GO



-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 14-Jan-13
-- Last updated: 08-Jan-15
-- Description:	Authorize record to CCHECKTOTAL
-- =============================================
ALTER PROCEDURE [dbo].[CMS_CCheckTotal_Auth]	
	@D_CODE		varchar(12),	
	@MOD_NO			int,
	@MOD_DATETIME	datetime
AS
BEGIN	
	DECLARE @STATUS			char(1),
			@TOTAL_CHKNO	numeric(4,0), 
			@TOTAL_CHKAMT	numeric(12,2), 			
			@INPUT_BY		varchar(20),
			@INPUT_DATETIME datetime,
			@INPUT_FROM		varchar(30),
			@LAST_MOD_NO	int,
			@IS_AUTH		bit;			
	
	DECLARE @ErrorVar1		int; 
			
	SET NOCOUNT ON;

	SELECT @STATUS = '';

	BEGIN TRANSACTION;

	IF EXISTS(SELECT D_CODE from CCHECKTOTAL_HIST 
			  WHERE D_CODE=@D_CODE AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT @STATUS=[STATUS],
				@TOTAL_CHKNO=TOTAL_CHKNO, 
				@TOTAL_CHKAMT=TOTAL_CHKAMT,
				@INPUT_BY=INPUT_BY,	@INPUT_DATETIME=INPUT_DATETIME,
				@INPUT_FROM=INPUT_FROM,@IS_AUTH=IS_AUTH
				FROM CCHECKTOTAL_HIST 
				WHERE D_CODE=@D_CODE AND MOD_NO=@MOD_NO;
			IF (@IS_AUTH = 1)
				BEGIN
					-- already authorized
					ROLLBACK TRANSACTION;
					RETURN 3;
				END;
			IF (@INPUT_BY = substring(suser_name(),charindex('\',suser_name())+1,20))
				BEGIN
					-- maker and checker same person
					ROLLBACK TRANSACTION;
					RETURN 5;
				END;
			IF (@INPUT_DATETIME <> @MOD_DATETIME)
				BEGIN
					-- Data hase been changed. Need notification
					ROLLBACK TRANSACTION;
					RETURN 7;
				END;			
		END;
	ELSE
		BEGIN			
			-- not exist
			ROLLBACK TRANSACTION;
			RETURN 4;
		END	;

	IF @STATUS='U'
		BEGIN
			SELECT @STATUS='L';
		END

	IF @MOD_NO > 1
		BEGIN	
		
			INSERT INTO CCHECKTOTAL_HIST 
				SELECT *,1 FROM CCHECKTOTAL
				WHERE D_CODE=@D_CODE;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END


			UPDATE CCHECKTOTAL_HIST
				SET [STATUS] = 'O' 
				WHERE D_CODE=@D_CODE
				AND [STATUS] = 'L';

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			--IF @STATUS='U'
			--	BEGIN
			--		SELECT @STATUS='L';
			--	END

			UPDATE CCHECKTOTAL
				SET
				TOTAL_CHKNO=@TOTAL_CHKNO,
				TOTAL_CHKAMT=@TOTAL_CHKAMT, 
				INPUT_BY=@INPUT_BY,	INPUT_DATETIME=@INPUT_DATETIME,
				INPUT_FROM=@INPUT_FROM,
				AUTH_BY=substring(suser_name(),charindex('\',suser_name())+1,20),
				AUTH_DATETIME=GETDATE(),AUTH_FROM=HOST_NAME(),
				MOD_NO=@MOD_NO,[STATUS]=@STATUS
			WHERE D_CODE=@D_CODE;

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END
			
			DELETE CCHECKTOTAL_HIST WHERE D_CODE=@D_CODE
				AND IS_AUTH=0;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END	

		END
	ELSE -- first record
		BEGIN
			INSERT INTO CCHECKTOTAL
				SELECT D_CODE,TOTAL_CHKNO, TOTAL_CHKAMT, 
					INPUT_BY, INPUT_DATETIME, INPUT_FROM, 
					substring(suser_name(),charindex('\',suser_name())+1,20), 
					GETDATE(), HOST_NAME(), MOD_NO, 'L' 
					FROM CCHECKTOTAL_HIST
					WHERE D_CODE=@D_CODE AND MOD_NO=@MOD_NO;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			DELETE CCHECKTOTAL_HIST WHERE D_CODE=@D_CODE
				AND IS_AUTH=0;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END			
					
		END
	
	-- Now update CCHECK

	INSERT INTO CCHECK_HIST(SLNO, D_CODE, CLIENT_CODE, DLOCATION_CODE, 
		CUSTOMER_REF, SLIP_DATE, VALUE_DATE, CHECK_NO, AMOUNT, 
		CHECK_DATE, CHECK_TYPE, DRAWER, DRAWEE_BANK_CODE, LOCATION_CODE, 
		BRANCH_CODE, CHECK_REF, RTN_STATUS, NONZONE_REF, MOD_NO, IS_AUTH,
		REMINDER_DATE, REMINDER_NO, RTN_CODE,[FILENAME],FILE_USER_ID,FLEXGEN_DATE)
		SELECT SLNO, D_CODE, CLIENT_CODE, DLOCATION_CODE, 
		CUSTOMER_REF, SLIP_DATE, VALUE_DATE, CHECK_NO, AMOUNT, 
		CHECK_DATE, CHECK_TYPE, DRAWER, DRAWEE_BANK_CODE, LOCATION_CODE, 
		BRANCH_CODE, CHECK_REF, RTN_STATUS, NONZONE_REF, MOD_NO, 1,
		REMINDER_DATE, REMINDER_NO, RTN_CODE,[FILENAME],FILE_USER_ID,FLEXGEN_DATE
		FROM CCHECK
		WHERE D_CODE=@D_CODE;
	
	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END
	
	DELETE CCHECK WHERE D_CODE=@D_CODE;

	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END

	INSERT INTO CCHECK(SLNO, D_CODE, CLIENT_CODE, DLOCATION_CODE, 
		CUSTOMER_REF, SLIP_DATE, VALUE_DATE, CHECK_NO, AMOUNT, 
		CHECK_DATE, CHECK_TYPE, DRAWER, DRAWEE_BANK_CODE, LOCATION_CODE, 
		BRANCH_CODE, CHECK_REF, RTN_STATUS, NONZONE_REF, MOD_NO, 
		REMINDER_DATE, REMINDER_NO, RTN_CODE,[FILENAME],FILE_USER_ID,FLEXGEN_DATE,[STATUS])
		SELECT SLNO, D_CODE, CLIENT_CODE, DLOCATION_CODE, 
		CUSTOMER_REF, SLIP_DATE, VALUE_DATE, CHECK_NO, AMOUNT, 
		CHECK_DATE, CHECK_TYPE, DRAWER, DRAWEE_BANK_CODE, LOCATION_CODE, 
		BRANCH_CODE, CHECK_REF, RTN_STATUS, NONZONE_REF, MOD_NO, 
		REMINDER_DATE, REMINDER_NO, RTN_CODE,[FILENAME],FILE_USER_ID,FLEXGEN_DATE,@STATUS 
		FROM CCHECK_HIST 
		WHERE D_CODE=@D_CODE AND MOD_NO=@MOD_NO;
	
	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END	

	DELETE CCHECK_HIST WHERE D_CODE=@D_CODE AND MOD_NO=@MOD_NO;

	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END
	
	COMMIT TRANSACTION;
		
	SELECT @ErrorVar1 = @@error;
		
	IF @ErrorVar1 = 0
		BEGIN		
			RETURN 0;
		END
	ELSE
		BEGIN
			RETURN 1;
		END

    
END


GO




ALTER VIEW [dbo].[V_ANY_DEPOSIT]
as
(
	SELECT cc.*,cl.ACC_NO,cl.ACC_NAME,cl.MAIL_ADD,l.LOCATION_NAME,b.BANK_NAME AS DRAWEE_BANK
		FROM CCHECK cc
		LEFT OUTER JOIN CLIENT cl
		ON cc.CLIENT_CODE=cl.CLIENT_CODE
		LEFT OUTER JOIN LOCATION l
		ON l.LOCATION_CODE=cc.DLOCATION_CODE
		LEFT OUTER JOIN BANK b
		ON b.BANK_CODE=cc.DRAWEE_BANK_CODE
		WHERE cc.[STATUS]='L'
)

GO



ALTER VIEW [dbo].[V_ANY_FUNDING]
as
(
	SELECT cc.*,CONVERT(datetime,CONVERT(varchar(12), nc.INPUT_DATETIME))  as STATUS_DATE,nc.AMOUNT as COLLECTED_AMT, nc.VAT, nc.COMMISION, nc.POSTAGE_CHARGE, nc.INSTRUMENT_EXP, 
	cl.ACC_NO,cl.ACC_NAME,cl.MAIL_ADD,cl.CITIANY_CHARGE,cl.CITIANY_STD_CHARGE,cl.CITIANY_VAT,l.LOCATION_NAME,
	b.BANK_NAME AS DRAWEE_BANK,br.BRANCH_NAME as DRAWEE_BRANCH
	FROM CCHECK cc	
	INNER JOIN NCOLLECTION nc
	ON nc.NONZONE_REF=cc.NONZONE_REF
	LEFT OUTER JOIN CLIENT cl
	ON cc.CLIENT_CODE=cl.CLIENT_CODE
	LEFT OUTER JOIN LOCATION l
	ON l.LOCATION_CODE=cc.DLOCATION_CODE
	LEFT OUTER JOIN BANK b
	ON b.BANK_CODE=cc.DRAWEE_BANK_CODE
	LEFT OUTER JOIN BRANCH br
	ON br.BRANCH_CODE=cc.BRANCH_CODE AND br.BANK_CODE=cc.DRAWEE_BANK_CODE
	AND br.LOCATION_CODE=cc.LOCATION_CODE
	WHERE cc.RTN_STATUS='P' AND cc.[STATUS]='L'
)



GO



ALTER VIEW [dbo].[V_ANY_OUTSTANDING]
as
(
		SELECT cc.*,
		cl.ACC_NO,cl.ACC_NAME,cl.MAIL_ADD,l.LOCATION_NAME,
		b.BANK_NAME AS DRAWEE_BANK,br.BRANCH_NAME as DRAWEE_BRANCH,DATEDIFF(d,CC.SLIP_DATE,getdate()) as DAYS_OUTSTANDING
		FROM CCHECK cc		
		LEFT OUTER JOIN CLIENT cl
		ON cc.CLIENT_CODE=cl.CLIENT_CODE
		LEFT OUTER JOIN LOCATION l
		ON l.LOCATION_CODE=cc.DLOCATION_CODE
		LEFT OUTER JOIN BANK b
		ON b.BANK_CODE=cc.DRAWEE_BANK_CODE
		LEFT OUTER JOIN BRANCH br
		ON br.BRANCH_CODE=cc.BRANCH_CODE AND br.BANK_CODE=cc.DRAWEE_BANK_CODE
		AND br.LOCATION_CODE=cc.LOCATION_CODE
		WHERE NONZONE_REF IS NOT NULL AND cc.RTN_STATUS = 'O' AND cc.[STATUS]='L'
)

GO





ALTER VIEW [dbo].[V_ANY_REMINDER]
as
(
	SELECT SLNO,CHECK_NO,cc.AMOUNT,cc.DRAWEE_BANK_CODE,cc.BRANCH_CODE,cc.LOCATION_CODE,SLIP_DATE,DRAWER,DLOCATION_CODE,
		cc.NONZONE_REF,BANK_NAME,BRANCH_NAME,BRANCH_ADD1,BRANCH_ADD2,LOCATION_NAME,
		REF_DATE,(cc.DRAWEE_BANK_CODE+cc.LOCATION_CODE+cc.branch_code) as struniquebranch_code,
		REMINDER_NO,REMINDER_DATE
		FROM CCHECK cc, BANK b,BRANCH br,LOCATION l,NCOLLECTION nc
		WHERE cc.[STATUS]='L' 
		AND	cc.REMINDER_NO<7
		AND cc.DRAWEE_BANK_CODE=br.BANK_CODE AND cc.BRANCH_CODE=br.BRANCH_CODE
		AND cc.LOCATION_CODE=br.LOCATION_CODE
		AND cc.DRAWEE_BANK_CODE=b.BANK_CODE  
		AND cc.LOCATION_CODE=br.LOCATION_CODE AND 
		cc.LOCATION_CODE=l.LOCATION_CODE AND cc.RTN_STATUS='O' AND 
		cc.NONZONE_REF IS NOT NULL 
		AND cc.NONZONE_REF=nc.NONZONE_REF
)

GO




ALTER VIEW [dbo].[V_ANY_RETURN]
as
(
	SELECT cc.*,cl.ACC_NO,cl.ACC_NAME,cl.MAIL_ADD,l.LOCATION_NAME,rr.REJECT_REASON,
		b.BANK_NAME, br.BRANCH_NAME, CONVERT(datetime,CONVERT(varchar(12),nc.INPUT_DATETIME))  AS RET_DATE
		FROM CCHECK cc		
		INNER JOIN NCOLLECTION nc
		ON nc.NONZONE_REF=cc.NONZONE_REF
		LEFT OUTER JOIN RETURN_REJECT rr
		ON cc.RTN_CODE=rr.REJECT_CODE
		LEFT OUTER JOIN CLIENT cl
		ON cc.CLIENT_CODE=cl.CLIENT_CODE
		LEFT OUTER JOIN LOCATION l
		ON l.LOCATION_CODE=cc.DLOCATION_CODE
		LEFT OUTER JOIN BANK b 
		ON b.BANK_CODE=cc.DRAWEE_BANK_CODE
		LEFT OUTER JOIN BRANCH br
		ON b.BANK_CODE=br.BANK_CODE AND br.BRANCH_CODE=cc.BRANCH_CODE
		AND br.LOCATION_CODE=cc.LOCATION_CODE
		WHERE CC.RTN_STATUS='R' AND cc.[STATUS]='L'
)


GO



ALTER view [dbo].[V_DD_BREAKUP]      
AS    
(
	SELECT a.D_CODE,a.CLIENT_CODE,a.CHECK_NO,  
	b.* 
	FROM CCHECK  a,	
		(  
		SELECT a.NONZONE_REF,b.d_code dd_dcode,a.DDREFNO,
		a.AMOUNT,a.VAT,a.COMMISION, a.POSTAGE_CHARGE, a.INSTRUMENT_EXP,
		b.DD_NO,b.DD_DATE,b.AMOUNT dd_amount FROM NCOLLECTION a,  
		dd b WHERE a.ddrefno=(b.d_code+ RIGHT('000'+convert(varchar(3),b.slno ),3))  
		)b  
	WHERE a.NONZONE_REF=b.NONZONE_REF 
	AND a.[STATUS]='L'
)


GO



-- =============================================
-- Author:		Fahad Khan
-- Create date: 23-July-14
-- Description:	Get detail of CCMSREF_TAB_HIST CTR Data
-- =============================================
ALTER PROCEDURE [dbo].[CMS_CCMSRefTabHist_GetCTRDet]	
	@FROM_DATE	date,
	@TO_DATE	date
AS
BEGIN	
	
	SET NOCOUNT ON;

	SELECT a.CTR_REF,a.D_CODE, a.ACC_NO, b.CITICASH_AMOUNT ,a.FLEXGEN_DATE 
	FROM CCMSREF_TAB_HIST a INNER JOIN
	DSCHEDULE b ON a.D_CODE = b.D_CODE 
	WHERE a.CTR_REF>0	AND ((a.FLEXGEN_DATE>=@FROM_DATE AND a.FLEXGEN_DATE<=@TO_DATE)
	OR CONVERT(datetime,CONVERT(varchar(12), a.FLEXGEN_DATE))=@TO_DATE)

END

GO











