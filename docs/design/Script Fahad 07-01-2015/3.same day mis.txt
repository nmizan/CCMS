CREATE TABLE [dbo].[IMP_SAMEDAYMIS_M](
	[AC_NO] [varchar](16) NOT NULL,
	[TRANSACTION_DATE] [datetime] NOT NULL,
	[SLIP_NO] [varchar](12) NOT NULL,
	[INSTRUMENT_TYPE] [varchar](5) NOT NULL,
	[INSTRUMENT_NO] [varchar](15) NULL,
	[ISSUE_BANK] [varchar](100) NULL,
	[LOCATION] [varchar](60) NULL,
	[AMOUNT] [numeric](12, 2) NULL,
	[CLIENT_CODE] [varchar](6) NULL,
	[INPUT_BY] [varchar](20) NULL,
	[INPUT_DATE] [datetime] NULL,
 CONSTRAINT [PK_IMP_SAMEDAYMIS_M] PRIMARY KEY 
(
	[SLIP_NO] ASC
) ON [PRIMARY]
) ON [PRIMARY]

GO

alter table IMP_SAMEDAYMIS_M  ADD SLNO NUMERIC(12,0) IDENTITY

GO

CREATE TABLE [dbo].[IMP_SAMEDAYMIS](
	[AC_NO] [varchar](16) NOT NULL,
	[TRANSACTION_DATE] [datetime] NOT NULL,
	[SLIP_NO] [varchar](12) NOT NULL,
	[INSTRUMENT_TYPE] [varchar](5) NOT NULL,
	[INSTRUMENT_NO] [varchar](15) NULL,
	[ISSUE_BANK] [varchar](100) NULL,
	[LOCATION] [varchar](60) NULL,
	[AMOUNT] [numeric](12, 2) NULL,
	[CLIENT_CODE] [varchar](6) NULL,
	[FLAG]        [bit]      NULL,
	[REMARKS]     [varchar](100) NULL,  
	[INPUT_BY] [varchar](20) NULL,
	[INPUT_DATETIME] [datetime] NULL,
	[INPUT_FROM] [varchar](30) NULL,
	[AUTH_BY] [varchar](20) NULL,
	[AUTH_DATETIME] [datetime] NULL,
	[AUTH_FROM] [varchar](30) NULL,
	[MOD_NO] [numeric](3, 0) NOT NULL,
	[STATUS] [char](1) NOT NULL,
 CONSTRAINT [PK_IMP_SAMEDAYMIS] PRIMARY KEY 
(
	[SLIP_NO] ASC
) ON [PRIMARY]
) ON [PRIMARY]


GO

CREATE TABLE [dbo].[IMP_SAMEDAYMIS_HIST](
	[AC_NO] [varchar](16) NOT NULL,
	[TRANSACTION_DATE] [datetime] NOT NULL,
	[SLIP_NO] [varchar](12) NOT NULL,
	[INSTRUMENT_TYPE] [varchar](5) NOT NULL,
	[INSTRUMENT_NO] [varchar](15) NULL,
	[ISSUE_BANK] [varchar](100) NULL,
	[LOCATION] [varchar](60) NULL,
	[AMOUNT] [numeric](12, 2) NULL,
	[CLIENT_CODE] [varchar](6) NULL,
	[FLAG]        [bit]      NULL,
	[REMARKS]     [varchar](100) NULL,  
	[INPUT_BY] [varchar](20) NULL,
	[INPUT_DATETIME] [datetime] NULL,
	[INPUT_FROM] [varchar](30) NULL,
	[AUTH_BY] [varchar](20) NULL,
	[AUTH_DATETIME] [datetime] NULL,
	[AUTH_FROM] [varchar](30) NULL,
	[MOD_NO] [numeric](3, 0) NOT NULL,
	[STATUS] [char](1) NOT NULL,
	[IS_AUTH] [bit] NOT NULL,
 CONSTRAINT [PK_IMP_SAMEDAYMIS_HIST] PRIMARY KEY 
(
	[SLIP_NO] ASC,
	[MOD_NO] ASC
) ON [PRIMARY]
) ON [PRIMARY]

GO

-- =============================================
-- Author:		Md. Fahad Khan
-- Create date: 30-Oct-14
-- Description:	Add record to IMP_SAMEDAYMIS_M
-- =============================================
CREATE PROCEDURE [dbo].[CMS_IMP_SameDayMisM_Add]	
	@AC_NO	                        varchar(16), 
	@TRANSACTION_DATE				datetime, 
	@SLIP_NO			            varchar(12),
	@INSTRUMENT_TYPE				varchar(5),
	@INSTRUMENT_NO				    varchar(15),
	@ISSUE_BANK				        varchar(100),
	@LOCATION				        varchar(60),
	@AMOUNT				            numeric(12,0),
	@CLIENT_CODE				    varchar(6),
	@INPUT_BY				        varchar(20)
	
AS
BEGIN	
			
	 
	DECLARE @ErrorVar		int; 

	SET NOCOUNT ON;



	INSERT INTO IMP_SAMEDAYMIS_M(AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, INPUT_BY, INPUT_DATE)
		VALUES(@AC_NO, @TRANSACTION_DATE, @SLIP_NO, @INSTRUMENT_TYPE, @INSTRUMENT_NO, @ISSUE_BANK, @LOCATION, @AMOUNT, @CLIENT_CODE, @INPUT_BY, GETDATE())

	SELECT @ErrorVar = @@ERROR;	

	IF @ErrorVar <> 0				
		BEGIN			
			RETURN 1;
		END
	
	RETURN 0;

	
END

GO
-- =============================================
-- Author:		Md. Fahad Khan
-- Create date: 30-Oct-14
-- Description:	Delete record to IMP_SAMEDAYMIS_M
-- =============================================
CREATE PROCEDURE [dbo].[CMS_IMP_SameDayMisM_Delete]	

	@TRANSACTION_DATE				datetime
	
AS
BEGIN	
			
	 
	DECLARE @ErrorVar		int; 

	SET NOCOUNT ON;
	

	DELETE IMP_SAMEDAYMIS_M WHERE TRANSACTION_DATE=@TRANSACTION_DATE

	SELECT @ErrorVar = @@ERROR;	

	IF @ErrorVar <> 0				
		BEGIN			
			RETURN 1;
		END
	
	RETURN 0;

	
END

GO


-- =============================================
-- Author:		Md. Fahad Khan
-- Create date: 30-Oct-14
-- Description:	Get User to IMP_SAMEDAYMIS_M
-- =============================================
CREATE PROCEDURE [dbo].[CMS_IMP_SameDayMisM_GET_User]	

	@TRANSACTION_DATE				datetime
	
AS
BEGIN	
			
	 
	DECLARE @ErrorVar		int; 

	SET NOCOUNT ON;
	

	SELECT DISTINCT INPUT_BY FROM IMP_SAMEDAYMIS_M WHERE TRANSACTION_DATE=@TRANSACTION_DATE;
	

	SELECT @ErrorVar = @@ERROR;	

	IF @ErrorVar <> 0				
		BEGIN			
			RETURN 1;
		END
	
	RETURN 0;

	
END


GO

-- =============================================
-- Author:		Md. Fahad Khan
-- Create date: 30-Oct-14
-- Description:	COUNT Repocrd IMP_SAMEDAYMIS_M
-- =============================================
CREATE PROCEDURE [dbo].[CMS_IMP_SameDayMisM_Count]	

	@TRANSACTION_DATE				datetime
	
AS
BEGIN	
			
	 
	DECLARE @ErrorVar		int; 

	SET NOCOUNT ON;
	

	SELECT COUNT (isnull(SLNO,0)) SLNO FROM IMP_SAMEDAYMIS_M WHERE TRANSACTION_DATE=@TRANSACTION_DATE;
	

	SELECT @ErrorVar = @@ERROR;	

	IF @ErrorVar <> 0				
		BEGIN			
			RETURN 1;
		END
	
	RETURN 0;

	
END


GO

 -- =============================================
-- Author:		Md. Fahad Khan
-- Create date: 30-Oct-14
-- Description:	Get Details IMP_SAMEDAYMIS_M
-- =============================================
CREATE PROCEDURE [dbo].[CMS_IMP_SameDayMisM_GET_Details]	

	@TRANSACTION_DATE				datetime
	
AS
BEGIN	
			
	 
	DECLARE @ErrorVar		int; 

	SET NOCOUNT ON;
	

	SELECT * FROM IMP_SAMEDAYMIS_M WHERE TRANSACTION_DATE=@TRANSACTION_DATE ORDER BY SLNO ASC;
	

	SELECT @ErrorVar = @@ERROR;	

	IF @ErrorVar <> 0				
		BEGIN			
			RETURN 1;
		END
	
	RETURN 0;

	
END

GO


-- =============================================
-- Author:		Md. Fahad Khan
-- Create date: 30-Oct-14
-- Description:	Add record to IMP_SAMEDAYMIS
-- =============================================
CREATE PROCEDURE [dbo].[CMS_IMP_SameDayMisM_To_SameDayMis_Add]	
	
	@TRANSACTION_DATE				datetime, 
	@SLIP_NO                        varchar(12),
	@INPUT_BY				        varchar(20)
	
AS
BEGIN	
			
	 
	DECLARE @ErrorVar		int; 

	SET NOCOUNT ON;
	

	INSERT INTO IMP_SAMEDAYMIS(AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG,INPUT_BY, INPUT_DATETIME, AUTH_BY, AUTH_DATETIME, AUTH_FROM, MOD_NO, STATUS)
		                SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE,NULL, INPUT_BY, INPUT_DATE,@INPUT_BY,GETDATE(), HOST_NAME(),1,'L' FROM 
		        IMP_SAMEDAYMIS_M WHERE TRANSACTION_DATE=@TRANSACTION_DATE AND SLIP_NO = @SLIP_NO;

	SELECT @ErrorVar = @@ERROR;	

	IF @ErrorVar <> 0				
		BEGIN			
			RETURN 1;
		END
	
	RETURN 0;

	
END


GO



CREATE TABLE [dbo].[IMP_SAMEDAYMIS_MAIL](
	[ID] [numeric](12, 0) NOT NULL,
	[CLIENT_CODE] [varchar](6) NOT NULL,
	[AC_NO] [varchar](16) NOT NULL,
	[MAIL_DATE] [datetime] NOT NULL,
	[EMAIL] [varchar](50) NOT NULL,
	[CONTENT] [varchar](400) NULL,
	[USER_ID] [varchar](20) NULL,
 CONSTRAINT [PK_IMP_SAMEDAYMIS_MAIL] PRIMARY KEY  
(
	[ID] ASC
) ON [PRIMARY]
) ON [PRIMARY]


GO


-- =============================================
-- Author:		Fahad Khan
-- Create date: 02-Nov-14
-- Description:	Get detail to IMP_SAMEDAYMIS table
-- =============================================
CREATE PROCEDURE [dbo].[CMS_IMP_SameDayMIS_GetDetailList]		
	@DEL_FLAG	int,
	@AUTH_FLAG	bit
AS
BEGIN	
		
	SET NOCOUNT ON;

	IF @AUTH_FLAG=0
		BEGIN
			SELECT *,'S' = 'U'				 
				FROM IMP_SAMEDAYMIS_HIST 
				WHERE IS_AUTH=0			
				ORDER BY TRANSACTION_DATE;
		END;
	ELSE
		BEGIN
			IF @DEL_FLAG=0
				BEGIN
					 --   SELECT *,1,'S' = 'A'				
						--FROM IMP_SAMEDAYMIS
						--WHERE [STATUS] ='L' 					
						--ORDER BY TRANSACTION_DATE
						
						SELECT *,1,'S' = 'A'				
						FROM IMP_SAMEDAYMIS  
						WHERE [STATUS] ='L' AND  FLAG <> 1					
						
						Union
						SELECT *,1,'S' = 'A'				
						FROM IMP_SAMEDAYMIS  
						WHERE [STATUS] ='L' AND  FLAG IS NULL
	                                        ORDER BY TRANSACTION_DATE 
						
						
						
				END;
			ELSE
				BEGIN
					SELECT *,1,'S' = 
						CASE  
							WHEN [STATUS] = 'D' THEN 'D'                    
							ELSE 'A'
						END 
						FROM IMP_SAMEDAYMIS
						WHERE [STATUS] in ('L','D')	AND FLAG <> 1				
						ORDER BY TRANSACTION_DATE
				END;
		END;

	
	   
END


GO





-- =============================================
-- Author:		Md. Fahad Khan
-- Create date: 02-November-14
-- Description:	Add record to IMP_SAMEDAYMIS
-- =============================================
CREATE PROCEDURE [dbo].[CMS_IMP_SameDayMis_Add]	
	@AC_NO	                        varchar(16), 
	@TRANSACTION_DATE				datetime, 
	@SLIP_NO			            varchar(12),
	@INSTRUMENT_TYPE				varchar(5),
	@INSTRUMENT_NO				    varchar(15),
	@ISSUE_BANK				        varchar(100),
	@LOCATION				        varchar(60),
	@AMOUNT				            numeric(12,0),
	@CLIENT_CODE				    varchar(6),
	@FLAG                           bit,
	@INPUT_BY				        varchar(20),
	@REMARKS                        varchar(400)
	
AS
BEGIN

DECLARE @ErrorVar INT;
	
	SET NOCOUNT ON;

	BEGIN TRANSACTION;

	IF EXISTS(SELECT SLIP_NO from IMP_SAMEDAYMIS WHERE SLIP_NO=@SLIP_NO)
		BEGIN
			-- Duplicate Entry
			ROLLBACK TRANSACTION;		
			RETURN 2	
		END
	
	DELETE IMP_SAMEDAYMIS_HIST WHERE 
		SLIP_NO=@SLIP_NO AND IS_AUTH=0;

	SELECT @ErrorVar = @@ERROR;
		
	IF @ErrorVar <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END
	ELSE
	
	
	INSERT INTO IMP_SAMEDAYMIS_HIST(AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, 
	                               ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS, INPUT_BY, INPUT_DATETIME, 
	                               INPUT_FROM, MOD_NO, [STATUS], IS_AUTH)
		                           VALUES(@AC_NO, @TRANSACTION_DATE, @SLIP_NO, @INSTRUMENT_TYPE, @INSTRUMENT_NO, 
	                               @ISSUE_BANK, @LOCATION, @AMOUNT, @CLIENT_CODE, @FLAG, @REMARKS, substring(suser_name(),charindex('\',suser_name())+1,20),
		                           GETDATE(),HOST_NAME(), 1, 'U', 0)


	SELECT @ErrorVar = @@ERROR;
	
	IF @ErrorVar <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END
	
	COMMIT TRANSACTION;
	RETURN 0;
	   
	
END

GO

-- =============================================
-- Author:		Fahad Khan
-- Create date: 02-Nov-14
-- Description:	Get detail of IMP_SAMEDAYMIS table
-- =============================================
CREATE PROCEDURE [dbo].[CMS_IMP_SameDayMis_GetDetail]	
	@SLIP_NO	varchar(12),	
	@MOD_NO		int	
AS
BEGIN	
	
	SET NOCOUNT ON;

	IF EXISTS( SELECT SLIP_NO 
			   FROM IMP_SAMEDAYMIS WHERE SLIP_NO=@SLIP_NO AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT *,'IS_AUTH'=1 
			FROM  IMP_SAMEDAYMIS 
			WHERE SLIP_NO=@SLIP_NO AND MOD_NO=@MOD_NO
		END	
	ELSE
		BEGIN
			SELECT * 
			FROM IMP_SAMEDAYMIS_HIST
			WHERE SLIP_NO=@SLIP_NO AND MOD_NO=@MOD_NO
		END
END

GO
-- =============================================
-- Author:		Fahad Khan
-- Create date: 02-Nov-14
-- Description:	Get Total # of modification of IMP_SamedayMIS
-- =============================================
CREATE PROCEDURE [dbo].[CMS_IMP_SameDayMis_GetMaxMod]
	@SLIP_NO			varchar(12)
AS
BEGIN	

	DECLARE @Max1	int,
			@Max2	int;

	SET NOCOUNT ON;
	
	SELECT @Max1=0,@Max2=0;

	SELECT @Max1=ISNULL(MAX(MOD_NO),0) FROM IMP_SAMEDAYMIS_HIST
		WHERE SLIP_NO=@SLIP_NO AND IS_AUTH=0;
		
	IF @Max1=0
		BEGIN
			SELECT @Max2=ISNULL(MAX(MOD_NO),0) FROM IMP_SAMEDAYMIS
				WHERE SLIP_NO=@SLIP_NO;
			SELECT @Max2;
			RETURN 0;			
		END
	
	SELECT @Max1;
	RETURN 0;

END

GO

-- =============================================
-- Author:		Fahd Khan
-- Create date: 2-Nov-14
-- Description:	update detail to IMP_SAMEDAYMIS table
-- =============================================

CREATE PROCEDURE [dbo].[CMS_IMP_SameDayMis_Update]	
	@AC_NO	                        varchar(16), 
	@TRANSACTION_DATE				datetime, 
	@SLIP_NO			            varchar(12),
	@INSTRUMENT_TYPE				varchar(5),
	@INSTRUMENT_NO				    varchar(15),
	@ISSUE_BANK				        varchar(100),
	@LOCATION				        varchar(60),
	@AMOUNT				            numeric(12,0),
	@CLIENT_CODE				    varchar(6),
	@FLAG                           bit,
	@REMARKS                        varchar(400),
	@MOD_NO			int,
	@RET_MOD_NO		int output
AS
BEGIN	
	DECLARE @ErrorVar INT;
	
	SET NOCOUNT ON;

	BEGIN TRANSACTION;

	IF EXISTS(SELECT SLIP_NO FROM IMP_SAMEDAYMIS
				WHERE SLIP_NO=@SLIP_NO AND MOD_NO=@MOD_NO)
		BEGIN

			DELETE IMP_SAMEDAYMIS_HIST WHERE SLIP_NO=@SLIP_NO AND MOD_NO=@MOD_NO AND IS_AUTH=0;

			SELECT @ErrorVar = @@ERROR;		

			IF @ErrorVar <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END
			
			SELECT @RET_MOD_NO = @MOD_NO +1;
			
		
			
			INSERT INTO IMP_SAMEDAYMIS_HIST(AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK,
				 LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS, INPUT_BY,
				 INPUT_DATETIME, INPUT_FROM,MOD_NO,[STATUS],IS_AUTH)
				SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK,
				 LOCATION, AMOUNT, CLIENT_CODE, @FLAG, @REMARKS, 
				substring(suser_name(),charindex('\',suser_name())+1,20),
				GETDATE(),HOST_NAME(),@RET_MOD_NO,'U',0 FROM IMP_SAMEDAYMIS WHERE SLIP_NO=@SLIP_NO AND MOD_NO=@MOD_NO

			SELECT @ErrorVar = @@ERROR;

			IF @ErrorVar <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END				

			COMMIT TRANSACTION;
			
			RETURN 0;

				
		END
	ELSE -- might be in hist table
		BEGIN

			IF EXISTS(SELECT SLIP_NO from IMP_SAMEDAYMIS_HIST 
						WHERE SLIP_NO=@SLIP_NO AND MOD_NO=@MOD_NO AND IS_AUTH=0)
				BEGIN
				
				

					DELETE IMP_SAMEDAYMIS_HIST WHERE SLIP_NO=@SLIP_NO AND IS_AUTH=0;

					SELECT @ErrorVar = @@ERROR;		

					IF @ErrorVar <> 0
						BEGIN
							ROLLBACK TRANSACTION;
							RETURN 1;
						END
						
				 INSERT INTO IMP_SAMEDAYMIS_HIST(AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK,
				 LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS, INPUT_BY,
				 INPUT_DATETIME, INPUT_FROM,MOD_NO,[STATUS],IS_AUTH)
				 VALUES( @AC_NO, @TRANSACTION_DATE, @SLIP_NO, @INSTRUMENT_TYPE, @INSTRUMENT_NO, @ISSUE_BANK,
				 @LOCATION, @AMOUNT, @CLIENT_CODE, @FLAG, @REMARKS, 
				 substring(suser_name(),charindex('\',suser_name())+1,20),
				 GETDATE(),HOST_NAME(),@MOD_NO,'U',0);

					SELECT @ErrorVar = @@ERROR;
		
					IF @ErrorVar <> 0
						BEGIN
							ROLLBACK TRANSACTION;
							RETURN 1;
						END
					
					SELECT @RET_MOD_NO=@MOD_NO;
					
					COMMIT TRANSACTION;
					RETURN 0;
			
				END
			ELSE
				BEGIN
					-- not exist
					ROLLBACK TRANSACTION;
					RETURN 4;
				END

		END
    
END

GO

-- =============================================
-- Author:		Fahad Khan
-- Create date: 02-Nov-14
-- Description:	Authorize record to IMP_SAMEDAYMIS table
-- =============================================
CREATE PROCEDURE [dbo].[CMS_IMP_SameDayMis_Auth]	
	@SLIP_NO		varchar(12),	
	@MOD_NO			int,
	@MOD_DATETIME	datetime
AS
BEGIN	
	DECLARE @STATUS			char(1),
			@AC_NO	                        varchar(16), 
			@TRANSACTION_DATE				datetime, 
			@INSTRUMENT_TYPE				varchar(5),
			@INSTRUMENT_NO				    varchar(15),
			@ISSUE_BANK				        varchar(100),
			@LOCATION				        varchar(60),
			@AMOUNT				            numeric(12,0),
			@CLIENT_CODE				    varchar(6),
			@FLAG                           bit,
			@REMARKS                        varchar(400),
			@INPUT_BY		varchar(20),
			@INPUT_DATETIME datetime,
			@INPUT_FROM		varchar(30),
			@AUTH_BY		varchar(20),
			@AUTH_DATETIME	datetime,
			@AUTH_FROM		varchar(30),
			@LAST_MOD_NO	int,
			@IS_AUTH		bit;			
	
	DECLARE @ErrorVar1		int; 
			

	SET NOCOUNT ON;

	SELECT @STATUS = '';

	BEGIN TRANSACTION

	IF EXISTS(SELECT SLIP_NO from IMP_SAMEDAYMIS_HIST
			  WHERE SLIP_NO=@SLIP_NO AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT @STATUS=[STATUS],@AC_NO=AC_NO,
				@TRANSACTION_DATE=TRANSACTION_DATE,@INSTRUMENT_TYPE=INSTRUMENT_TYPE,
				@INSTRUMENT_NO=INSTRUMENT_NO,@ISSUE_BANK=ISSUE_BANK,@LOCATION=LOCATION,
				@AMOUNT =AMOUNT, @CLIENT_CODE=CLIENT_CODE,@FLAG = FLAG, @REMARKS = REMARKS,  
				@INPUT_BY=INPUT_BY,	@INPUT_DATETIME=INPUT_DATETIME,
				@INPUT_FROM=INPUT_FROM,@IS_AUTH=IS_AUTH
				FROM IMP_SAMEDAYMIS_HIST 
				WHERE SLIP_NO=@SLIP_NO AND MOD_NO=@MOD_NO;
			IF (@IS_AUTH = 1)
				BEGIN
					-- already authorized
					ROLLBACK TRANSACTION;
					RETURN 3;
				END;
			IF (@INPUT_BY = substring(suser_name(),charindex('\',suser_name())+1,20))
				BEGIN
					-- maker and checker same person
					ROLLBACK TRANSACTION;
					RETURN 5;
				END;
			IF (@INPUT_DATETIME <> @MOD_DATETIME)
				BEGIN
					-- Data hase been changed. Need notification
					ROLLBACK TRANSACTION;
					RETURN 7;
				END;			
		END;
	ELSE
		BEGIN			
			-- not exist
			ROLLBACK TRANSACTION;
			RETURN 4;
		END	;

	IF @MOD_NO > 1
		BEGIN	
		
			INSERT INTO IMP_SAMEDAYMIS_HIST 
				SELECT *,1 FROM IMP_SAMEDAYMIS
				WHERE SLIP_NO =@SLIP_NO ;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END


			UPDATE IMP_SAMEDAYMIS_HIST
				SET [STATUS] = 'O' 
				WHERE SLIP_NO =@SLIP_NO 
				AND [STATUS] = 'L';

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			IF @STATUS='U'
				BEGIN
					SELECT @STATUS='L';
				END

			UPDATE IMP_SAMEDAYMIS
				SET AC_NO=@AC_NO,
				TRANSACTION_DATE=@TRANSACTION_DATE,INSTRUMENT_TYPE=@INSTRUMENT_TYPE,
				INSTRUMENT_NO=@INSTRUMENT_NO,ISSUE_BANK=@ISSUE_BANK,LOCATION=@LOCATION,
				AMOUNT =@AMOUNT, CLIENT_CODE=@CLIENT_CODE,FLAG = @FLAG, REMARKS = @REMARKS,
				INPUT_BY=@INPUT_BY,	INPUT_DATETIME=@INPUT_DATETIME,
				INPUT_FROM=@INPUT_FROM,
				AUTH_BY=substring(suser_name(),charindex('\',suser_name())+1,20),
				AUTH_DATETIME=GETDATE(),AUTH_FROM=HOST_NAME(),
				MOD_NO=@MOD_NO,[STATUS]=@STATUS
			WHERE SLIP_NO =@SLIP_NO ;

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END
			
			DELETE IMP_SAMEDAYMIS_HIST WHERE SLIP_NO =@SLIP_NO
				AND IS_AUTH=0;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END	

		END
	ELSE -- first record
		BEGIN
			INSERT INTO IMP_SAMEDAYMIS
				  SELECT AC_NO,TRANSACTION_DATE,SLIP_NO,INSTRUMENT_TYPE,
				    INSTRUMENT_NO,ISSUE_BANK,LOCATION,
				    AMOUNT, CLIENT_CODE,FLAG, REMARKS,
					INPUT_BY, INPUT_DATETIME, INPUT_FROM, 
					substring(suser_name(),charindex('\',suser_name())+1,20), 
					GETDATE(), HOST_NAME(), MOD_NO, 'L' 
					FROM IMP_SAMEDAYMIS_HIST
					WHERE SLIP_NO =@SLIP_NO AND MOD_NO=@MOD_NO;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			DELETE IMP_SAMEDAYMIS_HIST WHERE SLIP_NO=@SLIP_NO AND IS_AUTH=0;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END			
					
		END

		COMMIT TRANSACTION
		
		SELECT @ErrorVar1 = @@error;
		
		IF @ErrorVar1 = 0
			BEGIN		
				RETURN 0;
			END
		ELSE
			BEGIN
				RETURN 1;
			END


	
    
END

GO

-- =============================================
-- Author:		Fahad Khan
-- Create date: 02-Nov-14
-- Description:	Remove record from IMP_SameDayMis table
-- =============================================
CREATE PROCEDURE [dbo].[CMS_IMP_SameDayMis_Remove]	
	@SLIP_NO		varchar(12),	
	@MOD_NO			int,
	@RET_MOD_NO		int output
AS
BEGIN	
	DECLARE @STATUS			char(1),
			@AC_NO	                        varchar(16), 
			@TRANSACTION_DATE				datetime, 
			@INSTRUMENT_TYPE				varchar(5),
			@INSTRUMENT_NO				    varchar(15),
			@ISSUE_BANK				        varchar(100),
			@LOCATION				        varchar(60),
			@AMOUNT				            numeric(12,0),
			@CLIENT_CODE				    varchar(6),
			@FLAG                           bit,
			@REMARKS                        varchar(400),
			@ACC_NO			varchar(16),
			@INPUT_BY		varchar(20),
			@INPUT_DATETIME datetime,
			@INPUT_FROM		varchar(30),			
			@IS_AUTH		bit;			
	
	DECLARE @ErrorVar		int; 
			

	SET NOCOUNT ON;

	SET @STATUS = '';

	BEGIN TRANSACTION

	IF EXISTS(SELECT SLIP_NO from IMP_SAMEDAYMIS
			  WHERE SLIP_NO=@SLIP_NO AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT @STATUS=[STATUS],@AC_NO=AC_NO,
				@TRANSACTION_DATE=TRANSACTION_DATE,@INSTRUMENT_TYPE=INSTRUMENT_TYPE,
				@INSTRUMENT_NO=INSTRUMENT_NO,@ISSUE_BANK=ISSUE_BANK,@LOCATION=LOCATION,
				@AMOUNT =AMOUNT, @CLIENT_CODE=CLIENT_CODE,@FLAG = FLAG, @REMARKS = REMARKS,  
				@INPUT_BY=INPUT_BY,	@INPUT_DATETIME=INPUT_DATETIME,
				@INPUT_FROM=INPUT_FROM
				FROM IMP_SAMEDAYMIS 
				WHERE SLIP_NO=@SLIP_NO AND MOD_NO=@MOD_NO;
			
			IF (@STATUS = 'D')
				BEGIN
					-- already deleted
					ROLLBACK TRANSACTION;
					RETURN 6;
				END;

			DELETE IMP_SAMEDAYMIS_HIST WHERE SLIP_NO=@SLIP_NO AND IS_AUTH=0;

			SELECT @ErrorVar = @@ERROR;		

			IF @ErrorVar <> 0				
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			SELECT @RET_MOD_NO = @MOD_NO + 1;

			INSERT INTO 
				IMP_SAMEDAYMIS_HIST (AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, 
				ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS, INPUT_BY, INPUT_DATETIME, 
				INPUT_FROM, MOD_NO, [STATUS], IS_AUTH)
				VALUES(@AC_NO, @TRANSACTION_DATE, @SLIP_NO, @INSTRUMENT_TYPE, @INSTRUMENT_NO, 
				@ISSUE_BANK, @LOCATION, @AMOUNT, @CLIENT_CODE, @FLAG, @REMARKS,
				substring(suser_name(),charindex('\',suser_name())+1,20), 
				GETDATE(), HOST_NAME(), @RET_MOD_NO, 
				'D', 0)

			SELECT @ErrorVar = @@ERROR;		

			IF @ErrorVar <> 0				
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END
			
			COMMIT TRANSACTION;
			RETURN 0;
				
		END;
	ELSE 
		BEGIN			
			-- item might exist in hist table
			IF EXISTS(SELECT SLIP_NO from IMP_SAMEDAYMIS_HIST 
					  WHERE SLIP_NO=@SLIP_NO AND MOD_NO=@MOD_NO )
				BEGIN
					DELETE IMP_SAMEDAYMIS_HIST
						WHERE SLIP_NO=@SLIP_NO AND MOD_NO=@MOD_NO AND IS_AUTH=0;

					SELECT @ErrorVar = @@ERROR;		

					IF @ErrorVar <> 0				
						BEGIN
							ROLLBACK TRANSACTION;
							RETURN 1;
						END
					
					SELECT @RET_MOD_NO = @MOD_NO-1;

					COMMIT TRANSACTION;
					RETURN 0;			


				END
			ELSE
				BEGIN
					-- not exist
					ROLLBACK TRANSACTION;
					RETURN 4;
				END
			
		END		
    
END




GO


-- =============================================
-- Author:		Fahad Khan
-- Create date: 02-Nov-14
-- Description:	Process Sameday MIS data
-- =============================================
CREATE PROCEDURE [dbo].[CMS_Process_SameDayMis]	
	@TRANSDATE		datetime	
	
AS
BEGIN	

    DECLARE @ErrorVar INT;
    
    DECLARE @SLIP_NO  varchar(12),
	        @AC_NO    varchar(12),
	        @TRANSACTION_DATE datetime,
	        @INSTRUMENT_TYPE   varchar(5),
			@INSTRUMENT_NO   varchar(15),
			@AMOUNT   numeric(15,2),
			@CLIENT_CODE varchar(6);
	
	SET NOCOUNT ON;
	
	
	DECLARE curAll CURSOR FOR
	
	                    -- Select day SameDay Mis data
	
	                    SELECT SLIP_NO , TRANSACTION_DATE, INSTRUMENT_TYPE , INSTRUMENT_NO , AMOUNT , CLIENT_CODE 				
						FROM IMP_SAMEDAYMIS  
						WHERE TRANSACTION_DATE = @TRANSDATE AND [STATUS] ='L' AND  FLAG <> 1					
								
						UNION
						
						SELECT SLIP_NO , TRANSACTION_DATE, INSTRUMENT_TYPE , INSTRUMENT_NO , AMOUNT , CLIENT_CODE				
						FROM IMP_SAMEDAYMIS  
						WHERE TRANSACTION_DATE = @TRANSDATE  AND [STATUS] ='L' AND  FLAG IS NULL
						
						ORDER BY TRANSACTION_DATE 	
	
	 Open CurAll  

		FETCH NEXT FROM CurAll INTO @SLIP_NO , @TRANSACTION_DATE, @INSTRUMENT_TYPE , @INSTRUMENT_NO , @AMOUNT , @CLIENT_CODE
  
		 WHILE @@FETCH_STATUS=0   
		  BEGIN 
                    
				BEGIN 
				
				 IF @INSTRUMENT_TYPE ='Cash'
				
				   BEGIN
				
					   IF EXISTS(SELECT D_CODE FROM DSCHEDULE WHERE D_CODE = @SLIP_NO AND DEPOSIT_TYPE =@INSTRUMENT_TYPE AND  CLIENT_CODE = @CLIENT_CODE AND CITICASH_AMOUNT = @AMOUNT  )
						BEGIN
							
							UPDATE IMP_SAMEDAYMIS SET FLAG = 1 WHERE SLIP_NO = @SLIP_NO AND CLIENT_CODE = @CLIENT_CODE AND [STATUS] ='L';
								
						END 
					
				   END 
				   
				   Else IF @INSTRUMENT_TYPE ='Check'
				   
				    BEGIN
				    
				      IF EXISTS(SELECT D_CODE FROM CSD_DET WHERE D_CODE = @SLIP_NO AND CHECK_NO = @INSTRUMENT_NO AND AMOUNT = @AMOUNT)
						BEGIN
						
							UPDATE IMP_SAMEDAYMIS SET FLAG = 1 WHERE SLIP_NO = @SLIP_NO AND CLIENT_CODE = @CLIENT_CODE AND [STATUS] ='L';	
							
						END
				    END
                    
				END   
  
			 FETCH NEXT FROM CurAll INTO @SLIP_NO , @TRANSACTION_DATE, @INSTRUMENT_TYPE , @INSTRUMENT_NO , @AMOUNT , @CLIENT_CODE
		 END  
   
	 CLOSE CurAll  
	 DEALLOCATE CurAll
	
    
END

GO


-- =============================================
-- Author:		Fahad Khan
-- Create date: 03-Nov-14
-- Description:	Report Sameday MIS data
-- =============================================
CREATE PROCEDURE [dbo].[CMS_Report_SameDayMis]	
	@DATE_FROM		datetime,
	@DATE_TO		datetime,
	@FLAG           bit
	--@CLIENT_CODE    varchar(6),
	--@ACC_NO         varchar(16)	
	
AS
BEGIN	

    DECLARE @ErrorVar INT;
    
	SET NOCOUNT ON;
	
	
	
	--IF (@DATE_FROM is NULL) AND (@DATE_TO is NULL) AND (@FLAG is Not NULL) 
	 
	--  BEGIN
	  
	--  if @FLAG =0
	--	   BEGIN
		  
	--	   SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG = 0
		   
	--	   UNION
		   
	--	   SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG is NULL
		   
	--	   END
		   
	--   ELSE IF @FLAG =1
	   
	--	   BEGIN
		   
	--		   SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG= 1 
		   
	--	   END
		   
	  
	--  END
	  
	  --IF (@DATE_FROM is NULL) AND (@DATE_TO is NULL) AND (@CLIENT_CODE <> '') AND (@ACC_NO is NULL) AND (@FLAG is Not NULL) 
	
	  --BEGIN
	  
	  --  if @FLAG =0
		 --  BEGIN
	  
	  --       SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG = 0 AND CLIENT_CODE  = @CLIENT_CODE  
	         
	  --       UNION
	         
	  --       SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG is NULL AND CLIENT_CODE  = @CLIENT_CODE
	       
	       
	  --     END
	       
	  --     if @FLAG =1
	       
		 --  BEGIN
	  
	  --       SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG = 1 AND CLIENT_CODE  = @CLIENT_CODE
	      
	  --     END
	       
	  --END  
	  
	 -- ELSE IF (@DATE_FROM is NULL) AND (@DATE_TO is NULL) AND (@CLIENT_CODE is NOT NULL) AND (@ACC_NO is NULL) AND (@FLAG is Not NULL) 
	
	 -- BEGIN
	  
	  
	 --  if @FLAG =0
		--   BEGIN
	  
	 --        SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG =0 AND CLIENT_CODE = @CLIENT_CODE 
	         
	 --        UNION
	         
	 --        SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG is null AND CLIENT_CODE = @CLIENT_CODE 
	       
	       
	 --      END
	       
	 --      if @FLAG =1
	       
		--   BEGIN
	  
	 --        SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG =1 AND CLIENT_CODE = @CLIENT_CODE ;
	       
	 --      END
	  
	   
	  
	 -- END
	  
	 -- ELSE IF (@DATE_FROM is NULL) AND (@DATE_TO is NULL) AND (@CLIENT_CODE is NOT NULL) AND (@ACC_NO is NOT NULL) AND (@FLAG is Not NULL) 
	
		--  BEGIN
		    
		  
		--   if @FLAG =0
		--   BEGIN
	  
	 --        SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG =0 AND CLIENT_CODE = @CLIENT_CODE AND AC_NO = @ACC_NO 
	         
	 --        UNION
	         
	 --        SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG is null AND CLIENT_CODE = @CLIENT_CODE AND AC_NO = @ACC_NO 
	       
	       
	 --      END
	       
	 --      if @FLAG =1
	       
		--   BEGIN
	  
	 --         SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG =1 AND CLIENT_CODE = @CLIENT_CODE AND AC_NO = @ACC_NO ;
	       
	 --      END
	  
	 --     END
	      
	      
	        
	  IF (@DATE_FROM is NOT NULL) AND (@DATE_TO is NOT NULL) AND (@FLAG is Not NULL) 
	
	  
	  BEGIN
		    
		  
		   if @FLAG =0
		   BEGIN
	  
	        SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG =0  AND 
	            CONVERT(DATETIME,CONVERT(VARCHAR(12), TRANSACTION_DATE )) >= @DATE_FROM 
				AND CONVERT(DATETIME,CONVERT(VARCHAR(12),TRANSACTION_DATE)) <= @DATE_TO 
	         
	         UNION
	         
	         SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG is null  AND 
	            CONVERT(DATETIME,CONVERT(VARCHAR(12), TRANSACTION_DATE )) >= @DATE_FROM 
				AND CONVERT(DATETIME,CONVERT(VARCHAR(12),TRANSACTION_DATE)) <= @DATE_TO ;
	       
	       
	       END
	       
	       if @FLAG =1
	       
		   BEGIN
	  
	          SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG = 1  AND 
	            CONVERT(DATETIME,CONVERT(VARCHAR(12), TRANSACTION_DATE )) >= @DATE_FROM 
				AND CONVERT(DATETIME,CONVERT(VARCHAR(12),TRANSACTION_DATE)) <= @DATE_TO ;
	       
	       END
	  
	      END
	      
	      
	      ELSE
	      
	      
	           BEGIN
	  
			  if @FLAG =0
			  
				   BEGIN
				  
				   SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG = 0
				   
				   UNION
				   
				   SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG is NULL
				   
				   END
				   
			   ELSE IF @FLAG =1
			   
				   BEGIN
				   
					   SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG= 1 
				   
				   END
		   
	  
	         END
	  
	  
	  
	  
	   
	  
	 
	  
	  
	
	
    
END

GO

-- =============================================
-- Author:		Fahad Khan
-- Create date: 03-Nov-14
-- Description:	Report Sameday MIS data
-- =============================================
ALTER PROCEDURE [dbo].[CMS_Report_SameDayMis]	
	@DATE_FROM		datetime,
	@DATE_TO		datetime,
	@FLAG           bit
	--@CLIENT_CODE    varchar(6),
	--@ACC_NO         varchar(16)	
	
AS
BEGIN	

    DECLARE @ErrorVar INT;
    
	SET NOCOUNT ON;
	
	
	
	--IF (@DATE_FROM is NULL) AND (@DATE_TO is NULL) AND (@FLAG is Not NULL) 
	 
	--  BEGIN
	  
	--  if @FLAG =0
	--	   BEGIN
		  
	--	   SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG = 0
		   
	--	   UNION
		   
	--	   SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG is NULL
		   
	--	   END
		   
	--   ELSE IF @FLAG =1
	   
	--	   BEGIN
		   
	--		   SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG= 1 
		   
	--	   END
		   
	  
	--  END
	  
	  --IF (@DATE_FROM is NULL) AND (@DATE_TO is NULL) AND (@CLIENT_CODE <> '') AND (@ACC_NO is NULL) AND (@FLAG is Not NULL) 
	
	  --BEGIN
	  
	  --  if @FLAG =0
		 --  BEGIN
	  
	  --       SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG = 0 AND CLIENT_CODE  = @CLIENT_CODE  
	         
	  --       UNION
	         
	  --       SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG is NULL AND CLIENT_CODE  = @CLIENT_CODE
	       
	       
	  --     END
	       
	  --     if @FLAG =1
	       
		 --  BEGIN
	  
	  --       SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG = 1 AND CLIENT_CODE  = @CLIENT_CODE
	      
	  --     END
	       
	  --END  
	  
	 -- ELSE IF (@DATE_FROM is NULL) AND (@DATE_TO is NULL) AND (@CLIENT_CODE is NOT NULL) AND (@ACC_NO is NULL) AND (@FLAG is Not NULL) 
	
	 -- BEGIN
	  
	  
	 --  if @FLAG =0
		--   BEGIN
	  
	 --        SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG =0 AND CLIENT_CODE = @CLIENT_CODE 
	         
	 --        UNION
	         
	 --        SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG is null AND CLIENT_CODE = @CLIENT_CODE 
	       
	       
	 --      END
	       
	 --      if @FLAG =1
	       
		--   BEGIN
	  
	 --        SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG =1 AND CLIENT_CODE = @CLIENT_CODE ;
	       
	 --      END
	  
	   
	  
	 -- END
	  
	 -- ELSE IF (@DATE_FROM is NULL) AND (@DATE_TO is NULL) AND (@CLIENT_CODE is NOT NULL) AND (@ACC_NO is NOT NULL) AND (@FLAG is Not NULL) 
	
		--  BEGIN
		    
		  
		--   if @FLAG =0
		--   BEGIN
	  
	 --        SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG =0 AND CLIENT_CODE = @CLIENT_CODE AND AC_NO = @ACC_NO 
	         
	 --        UNION
	         
	 --        SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG is null AND CLIENT_CODE = @CLIENT_CODE AND AC_NO = @ACC_NO 
	       
	       
	 --      END
	       
	 --      if @FLAG =1
	       
		--   BEGIN
	  
	 --         SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG =1 AND CLIENT_CODE = @CLIENT_CODE AND AC_NO = @ACC_NO ;
	       
	 --      END
	  
	 --     END
	      
	      
	        
	  IF (@DATE_FROM is NOT NULL) AND (@DATE_TO is NOT NULL) AND (@FLAG is Not NULL) 
	
	  
	  BEGIN
		    
		  
		   if @FLAG =0
		   BEGIN
	  
	        SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG =0  AND 
	            CONVERT(DATETIME,CONVERT(VARCHAR(12), TRANSACTION_DATE )) >= @DATE_FROM 
				AND CONVERT(DATETIME,CONVERT(VARCHAR(12),TRANSACTION_DATE)) <= @DATE_TO  
	         
	         UNION
	         
	         SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG is null  AND 
	            CONVERT(DATETIME,CONVERT(VARCHAR(12), TRANSACTION_DATE )) >= @DATE_FROM
				AND CONVERT(DATETIME,CONVERT(VARCHAR(12),TRANSACTION_DATE)) <= @DATE_TO   ;
	       
	       
	       END
	       
	      ELSE if @FLAG =1
	       
		   BEGIN
	  
	          SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG = 1  AND 
	            CONVERT(DATETIME,CONVERT(VARCHAR(12), TRANSACTION_DATE )) >= @DATE_FROM 
				AND CONVERT(DATETIME,CONVERT(VARCHAR(12),TRANSACTION_DATE)) <= @DATE_TO ;
	       
	       END
	  
	      END
	      
	      
	      ELSE IF (@DATE_FROM is NULL ) AND (@DATE_TO is  NULL) AND  (@FLAG is Not NULL) 
	      
	      
	           BEGIN
	  
			  if @FLAG =0
			  
				   BEGIN
				  
				   SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG = 0
				   
				   UNION
				   
				   SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG is NULL
				   
				   END
				   
			   ELSE IF @FLAG =1
			   
				   BEGIN
				   
					   SELECT AC_NO, TRANSACTION_DATE, SLIP_NO, INSTRUMENT_TYPE, INSTRUMENT_NO, ISSUE_BANK, LOCATION, AMOUNT, CLIENT_CODE, FLAG, REMARKS FROM IMP_SAMEDAYMIS WHERE [STATUS] = 'L' AND FLAG= 1 
				   
				   END
		   
	  
	         END
	  
    
END

GO


