USE [CCMS]
GO
/****** Object:  StoredProcedure [dbo].[CMS_ClearingClient_Auth]    Script Date: 08/09/2015 1:54:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 31-Mar-13
-- Modified by : Mohammad Yasir Arafat
-- Modify date: 08 Sept 15
-- Description:	Authorize record to Clearing_Client table
-- =============================================
ALTER PROCEDURE [dbo].[CMS_ClearingClient_Auth]	
	@ACC_NO			varchar(15),
	@MOD_NO			int,
	@MOD_DATETIME	datetime
AS
BEGIN	
	DECLARE @STATUS				char(1),			
			@ACC_NAME			varchar(50),
			@MAIL_ADD			varchar(256), 
			@CONTACT			varchar(50), 			
			@SPEED_CR_TYPE		varchar(25),	
			@Direct_Debit_Customer bit,		
			@IS_DISABLE			bit,
			@IS_GOV				bit,
			@INSUFF_FUND		bit,
			@INPUT_BY			varchar(20),
			@INPUT_DATETIME		datetime,
			@INPUT_FROM			varchar(30),
			@IS_AUTH			bit;			
	
	DECLARE @ErrorVar1		int; 
	
	SET NOCOUNT ON;

	SELECT @STATUS = '';

	BEGIN TRANSACTION

	IF EXISTS(SELECT ACC_NO from CLEARING_CLIENT_HIST 
			  WHERE ACC_NO=@ACC_NO AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT @STATUS=[STATUS], 
				@ACC_NAME=ACC_NAME,@MAIL_ADD=MAIL_ADD,@CONTACT=CONTACT,
				@SPEED_CR_TYPE=SPEED_CR_TYPE,@IS_DISABLE=IS_DISABLE,
				@IS_GOV=IS_GOV,@INSUFF_FUND = INSUFF_FUND,
				@INPUT_BY=INPUT_BY,	@INPUT_DATETIME=INPUT_DATETIME,
				@INPUT_FROM=INPUT_FROM,@IS_AUTH=IS_AUTH,@Direct_Debit_Customer=Direct_Debit_Customer
				FROM CLEARING_CLIENT_HIST 
				WHERE ACC_NO=@ACC_NO AND MOD_NO=@MOD_NO;
			IF (@IS_AUTH = 1)
				BEGIN
					-- already authorized
					ROLLBACK TRANSACTION;
					RETURN 3;
				END;
			IF (@INPUT_BY = substring(suser_name(),charindex('\',suser_name())+1,20))
				BEGIN
					-- maker and checker same person
					ROLLBACK TRANSACTION;
					RETURN 5;
				END;
			IF (@INPUT_DATETIME <> @MOD_DATETIME)
				BEGIN
					-- Data hase been changed. Need notification
					ROLLBACK TRANSACTION;
					RETURN 7;
				END;			
		END;
	ELSE
		BEGIN			
			-- not exist
			ROLLBACK TRANSACTION;
			RETURN 4;
		END	;
		
	IF @STATUS='U'
		BEGIN
			SELECT @STATUS='L';
		END

	IF @MOD_NO > 1
		BEGIN	
		
			INSERT INTO CLEARING_CLIENT_HIST(ACC_NO, ACC_NAME, 
				MAIL_ADD, CONTACT, SPEED_CR_TYPE, IS_DISABLE, 
				INPUT_BY, INPUT_DATETIME, INPUT_FROM, 
				AUTH_BY, AUTH_DATETIME, AUTH_FROM, MOD_NO, [STATUS], IS_AUTH, 
				IS_GOV, INSUFF_FUND,Direct_Debit_Customer) 
				SELECT ACC_NO, ACC_NAME, 
				MAIL_ADD, CONTACT, SPEED_CR_TYPE, IS_DISABLE, 
				INPUT_BY, INPUT_DATETIME, INPUT_FROM, 
				AUTH_BY, AUTH_DATETIME, AUTH_FROM, MOD_NO, [STATUS], 1,
				IS_GOV, INSUFF_FUND,Direct_Debit_Customer
				FROM CLEARING_CLIENT
				WHERE ACC_NO=@ACC_NO;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END


			UPDATE CLEARING_CLIENT_HIST
				SET [STATUS] = 'O' 
				WHERE ACC_NO=@ACC_NO 
				AND [STATUS] = 'L';

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END		

			UPDATE CLEARING_CLIENT
				SET ACC_NAME=@ACC_NAME,MAIL_ADD=@MAIL_ADD,CONTACT=@CONTACT,
				SPEED_CR_TYPE=@SPEED_CR_TYPE, IS_DISABLE=@IS_DISABLE,
				IS_GOV=@IS_GOV,INSUFF_FUND = @INSUFF_FUND,
				INPUT_BY=@INPUT_BY,	INPUT_DATETIME=@INPUT_DATETIME,
				INPUT_FROM=@INPUT_FROM,
				AUTH_BY=substring(suser_name(),charindex('\',suser_name())+1,20),
				AUTH_DATETIME=GETDATE(),AUTH_FROM=HOST_NAME(),
				MOD_NO=@MOD_NO,[STATUS]=@STATUS,Direct_Debit_Customer=@Direct_Debit_Customer
			WHERE ACC_NO=@ACC_NO;

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END
			
			DELETE CLEARING_CLIENT_HIST WHERE ACC_NO=@ACC_NO
				AND IS_AUTH=0;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END	

		END
	ELSE -- first record
		BEGIN
			INSERT INTO CLEARING_CLIENT(ACC_NO, ACC_NAME, MAIL_ADD, 
				CONTACT, SPEED_CR_TYPE, IS_DISABLE, 
				INPUT_BY, INPUT_DATETIME, INPUT_FROM, 
				AUTH_BY, AUTH_DATETIME, AUTH_FROM, MOD_NO, [STATUS], 
				IS_GOV, INSUFF_FUND,Direct_Debit_Customer)
				SELECT ACC_NO, ACC_NAME,MAIL_ADD,
					CONTACT, SPEED_CR_TYPE,IS_DISABLE, 
					INPUT_BY, INPUT_DATETIME, INPUT_FROM,
					substring(suser_name(),charindex('\',suser_name())+1,20), 
					GETDATE(), HOST_NAME(), MOD_NO, 'L',
					IS_GOV, INSUFF_FUND,Direct_Debit_Customer
					FROM CLEARING_CLIENT_HIST
					WHERE ACC_NO=@ACC_NO AND MOD_NO=@MOD_NO;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			DELETE CLEARING_CLIENT_HIST WHERE ACC_NO=@ACC_NO
				AND IS_AUTH=0;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END			
					
		END

	-- Now update CLEARING_CLIENT_CHARGE

	INSERT INTO CLEARING_CLIENT_CHARGE_HIST(ACC_NO, SLNO, VALUE_TYPE, 
		MIN_AMOUNT, MAX_AMOUNT, BBK_AMOUNT, CITI_INC_AMOUNT, 
		CITI_VAT_AMOUNT, CLIENT_DR_AMOUNT, CHARGEABLE_AMOUNT, MOD_NO, IS_AUTH)
		SELECT ACC_NO, SLNO, VALUE_TYPE, 
		MIN_AMOUNT, MAX_AMOUNT, BBK_AMOUNT, CITI_INC_AMOUNT, 
		CITI_VAT_AMOUNT, CLIENT_DR_AMOUNT, CHARGEABLE_AMOUNT, MOD_NO, 1
		FROM CLEARING_CLIENT_CHARGE
		WHERE ACC_NO=@ACC_NO;
	
	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END
	
	DELETE CLEARING_CLIENT_CHARGE WHERE ACC_NO=@ACC_NO;

	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END

	INSERT INTO CLEARING_CLIENT_CHARGE(ACC_NO, SLNO, VALUE_TYPE, 
		MIN_AMOUNT, MAX_AMOUNT, BBK_AMOUNT, CITI_INC_AMOUNT, 
		CITI_VAT_AMOUNT, CLIENT_DR_AMOUNT, CHARGEABLE_AMOUNT, MOD_NO, [STATUS])
		SELECT ACC_NO, SLNO, VALUE_TYPE, 
		MIN_AMOUNT, MAX_AMOUNT, BBK_AMOUNT, CITI_INC_AMOUNT, 
		CITI_VAT_AMOUNT, CLIENT_DR_AMOUNT, CHARGEABLE_AMOUNT, MOD_NO, @STATUS 
		FROM CLEARING_CLIENT_CHARGE_HIST 
		WHERE ACC_NO=@ACC_NO AND MOD_NO=@MOD_NO;
	
	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END	

	DELETE CLEARING_CLIENT_CHARGE_HIST WHERE ACC_NO=@ACC_NO AND MOD_NO=@MOD_NO;

	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END
	
	COMMIT TRANSACTION;
		
	SELECT @ErrorVar1 = @@error;
		
	IF @ErrorVar1 = 0
		BEGIN		
			RETURN 0;
		END
	ELSE
		BEGIN
			RETURN 1;
		END

    
END

