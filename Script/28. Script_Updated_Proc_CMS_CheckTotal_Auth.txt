USE [CCMS]
GO
/****** Object:  StoredProcedure [dbo].[CMS_CheckTotal_Auth]    Script Date: 02/09/2015 3:46:34 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 20-Apr-13
-- Modified by: Mohammad Yasir Arafat
-- Modify date: 02 Sept 15
-- Description:	Authorize record to CHECKTOTAL
-- =============================================
ALTER PROCEDURE [dbo].[CMS_CheckTotal_Auth]	
	@MID			numeric(10,0),	
	@MOD_NO			int,
	@MOD_DATETIME	datetime
AS
BEGIN	
	DECLARE @STATUS			char(1),
			@DS_CODE		varchar(8),
			@OPR_DATE		datetime,
			@ENTRY_LOC		varchar(3),
			@TOTAL_CHKNO	int, 
			@TOTAL_CHKAMT	numeric(14,2), 
			@CUSTOMER_REF	varchar(50),		
			@INPUT_BY		varchar(20),
			@INPUT_DATETIME datetime,
			@INPUT_FROM		varchar(30),
			@LAST_MOD_NO	int,
			@IS_AUTH		bit,
			@AddSlipText varchar(150);			
	
	DECLARE @ErrorVar1		int; 
			
	SET NOCOUNT ON;

	SELECT @STATUS = '';

	BEGIN TRANSACTION;

	IF EXISTS(SELECT DS_CODE from CHECKTOTAL_HIST 
			  WHERE MID=@MID AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT @STATUS=[STATUS],
				@DS_CODE=DS_CODE,@OPR_DATE=OPR_DATE,@ENTRY_LOC=ENTRY_LOC,
				@TOTAL_CHKNO=TOTAL_CHKNO, 
				@TOTAL_CHKAMT=TOTAL_CHKAMT,@CUSTOMER_REF=CUSTOMER_REF,
				@INPUT_BY=INPUT_BY,	@INPUT_DATETIME=INPUT_DATETIME,
				@INPUT_FROM=INPUT_FROM,@IS_AUTH=IS_AUTH, @AddSlipText=AddSlipText
				FROM CHECKTOTAL_HIST 
				WHERE MID=@MID AND MOD_NO=@MOD_NO;
			IF (@IS_AUTH = 1)
				BEGIN
					-- already authorized
					ROLLBACK TRANSACTION;
					RETURN 3;
				END;
			IF (@INPUT_BY = substring(suser_name(),charindex('\',suser_name())+1,20))
				BEGIN
					-- maker and checker same person
					ROLLBACK TRANSACTION;
					RETURN 5;
				END;
			IF (@INPUT_DATETIME <> @MOD_DATETIME)
				BEGIN
					-- Data hase been changed. Need notification
					ROLLBACK TRANSACTION;
					RETURN 7;
				END;			
		END;
	ELSE
		BEGIN			
			-- not exist
			ROLLBACK TRANSACTION;
			RETURN 4;
		END	;

	IF @STATUS='U'
		BEGIN
			SELECT @STATUS='L';
		END
		
	IF @MOD_NO > 1
		BEGIN	
		
			INSERT INTO CHECKTOTAL_HIST(MID, DS_CODE, TOTAL_CHKNO, TOTAL_CHKAMT, 
				OPR_DATE,CUSTOMER_REF, ENTRY_LOC, ENTRY_DATE, 
				INPUT_BY, INPUT_DATETIME, INPUT_FROM, AUTH_BY, AUTH_DATETIME, AUTH_FROM, 
				MOD_NO, [STATUS], IS_AUTH,AddSlipText)
				SELECT MID, DS_CODE, TOTAL_CHKNO, TOTAL_CHKAMT, 
				OPR_DATE, CUSTOMER_REF, ENTRY_LOC, ENTRY_DATE, 
				INPUT_BY, INPUT_DATETIME, INPUT_FROM, AUTH_BY, AUTH_DATETIME, AUTH_FROM, 
				MOD_NO, [STATUS],1,AddSlipText FROM CHECKTOTAL
				WHERE MID=@MID;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END


			UPDATE CHECKTOTAL_HIST
				SET [STATUS] = 'O' 
				WHERE MID=@MID
				AND [STATUS] = 'L';

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			--IF @STATUS='U'
			--	BEGIN
			--		SELECT @STATUS='L';
			--	END

			UPDATE CHECKTOTAL
				SET
				DS_CODE=@DS_CODE,OPR_DATE=@OPR_DATE,ENTRY_LOC=@ENTRY_LOC,
				TOTAL_CHKNO=@TOTAL_CHKNO,
				TOTAL_CHKAMT=@TOTAL_CHKAMT,CUSTOMER_REF=@CUSTOMER_REF, 
				INPUT_BY=@INPUT_BY,	INPUT_DATETIME=@INPUT_DATETIME,
				INPUT_FROM=@INPUT_FROM,
				AUTH_BY=substring(suser_name(),charindex('\',suser_name())+1,20),
				AUTH_DATETIME=GETDATE(),AUTH_FROM=HOST_NAME(),
				MOD_NO=@MOD_NO,[STATUS]=@STATUS, AddSlipText=@AddSlipText
			WHERE MID=@MID;

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END
			
			DELETE CHECKTOTAL_HIST WHERE MID=@MID
				AND IS_AUTH=0;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END	

		END
	ELSE -- first record
		BEGIN  
			INSERT INTO CHECKTOTAL(MID, DS_CODE, TOTAL_CHKNO, TOTAL_CHKAMT, OPR_DATE, 
				CUSTOMER_REF, ENTRY_LOC, ENTRY_DATE, 
				INPUT_BY, INPUT_DATETIME, INPUT_FROM, 
				AUTH_BY, 
				AUTH_DATETIME, AUTH_FROM, MOD_NO, [STATUS],AddSlipText)
				SELECT MID,DS_CODE, TOTAL_CHKNO, TOTAL_CHKAMT, OPR_DATE, 
					CUSTOMER_REF, ENTRY_LOC,ENTRY_DATE,
					INPUT_BY, INPUT_DATETIME, INPUT_FROM, 
					substring(suser_name(),charindex('\',suser_name())+1,20), 
					GETDATE(), HOST_NAME(), MOD_NO, 'L',AddSlipText  
					FROM CHECKTOTAL_HIST
					WHERE MID=@MID AND MOD_NO=@MOD_NO;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			DELETE CHECKTOTAL_HIST WHERE MID=@MID
				AND IS_AUTH=0;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END			
					
		END
	
	-- Now update CLEARINGTAB

	INSERT INTO CLEARINGTAB_HIST(MID,DSL,OPR_DATE, ISSUE_DATE, NIKBRANCH_CODE, 
		PAYEE_NAME, CHECK_SERIES, CHECK_NUMBER, CHECK_NO, BOOK_NO, 
		CHECK_TYPE, ACC_NO, DEBIT_CREDIT, REMARK, BATCH_NO, CHECK_REF, 
		ENTRY_LOC, DS_CODE, RTN_STATUS, RTN_CODE, RETURN_DATE, CHECKED, 
		FLEX_FILENAME, IS_PDC, MOD_NO, IS_AUTH,VALUE_TYPE,IS_ROW_CHG,AddCheckText)
		SELECT MID,DSL,OPR_DATE, ISSUE_DATE, NIKBRANCH_CODE, 
		PAYEE_NAME, CHECK_SERIES, CHECK_NUMBER, CHECK_NO, BOOK_NO, 
		CHECK_TYPE, ACC_NO, DEBIT_CREDIT, REMARK, BATCH_NO, CHECK_REF, 
		ENTRY_LOC, DS_CODE, RTN_STATUS, RTN_CODE, RETURN_DATE, CHECKED, 
		FLEX_FILENAME, IS_PDC, MOD_NO, 1,VALUE_TYPE,IS_ROW_CHG,AddCheckText
		FROM CLEARINGTAB
		WHERE MID=@MID;
	
	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END
	
	DELETE CLEARINGTAB WHERE MID=@MID;

	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END

	INSERT INTO CLEARINGTAB(MID,DSL,OPR_DATE, ISSUE_DATE, NIKBRANCH_CODE, 
		PAYEE_NAME, CHECK_SERIES, CHECK_NUMBER, CHECK_NO, BOOK_NO, 
		CHECK_TYPE, ACC_NO, DEBIT_CREDIT, REMARK, BATCH_NO, CHECK_REF, 
		ENTRY_LOC, DS_CODE, RTN_STATUS, RTN_CODE, RETURN_DATE, CHECKED, 
		FLEX_FILENAME, IS_PDC, MOD_NO,VALUE_TYPE,IS_ROW_CHG,
		[STATUS],GOV_CHQ,IQA_FAILED,AddCheckText)
		SELECT MID,DSL,OPR_DATE, ISSUE_DATE, NIKBRANCH_CODE, 
		PAYEE_NAME, CHECK_SERIES, CHECK_NUMBER, CHECK_NO, BOOK_NO, 
		CHECK_TYPE, ACC_NO, DEBIT_CREDIT, REMARK, BATCH_NO, CHECK_REF, 
		ENTRY_LOC, DS_CODE, RTN_STATUS, RTN_CODE, RETURN_DATE, CHECKED, 
		FLEX_FILENAME, IS_PDC, MOD_NO,VALUE_TYPE,IS_ROW_CHG,
		@STATUS,GOV_CHQ,IQA_FAILED,AddCheckText
		FROM CLEARINGTAB_HIST 
		WHERE MID=@MID AND MOD_NO=@MOD_NO;
	
	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END	

	DELETE CLEARINGTAB_HIST WHERE MID=@MID AND MOD_NO=@MOD_NO;

	SELECT @ErrorVar1 = @@error;

	IF @ErrorVar1 <> 0
		BEGIN
			ROLLBACK TRANSACTION;
			RETURN 1;
		END
	
	COMMIT TRANSACTION;
		
	SELECT @ErrorVar1 = @@error;
		
	IF @ErrorVar1 = 0
		BEGIN		
			RETURN 0;
		END
	ELSE
		BEGIN
			RETURN 1;
		END

    
END

