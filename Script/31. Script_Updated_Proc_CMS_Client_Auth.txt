USE [CCMS]
GO
/****** Object:  StoredProcedure [dbo].[CMS_Client_Auth]    Script Date: 03/09/2015 3:35:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 22-Nov-12
-- Modified by: Mohammad Yasir Arafat
-- Modify date: 03 Sept 2015
-- Description:	Authorize record to client table
-- =============================================
ALTER PROCEDURE [dbo].[CMS_Client_Auth]	
	@CLIENT_CODE	varchar(6),
	@MOD_NO			int,
	@MOD_DATETIME	datetime
AS
BEGIN	
	DECLARE @STATUS				char(1),
			@ACC_NO				varchar(16),  
			@ACC_NAME			varchar(50),
			@MAIL_ADD			varchar(256), 
			@CONTACT			varchar(50), 
			@CASH_DAYS			numeric(2,0), 
			@SPEED_DAYS			numeric(2,0), 
			@CASH_CR_TYPE		varchar(25),
			@SPEED_CR_TYPE		varchar(25),
			@CASH_CHARGE		numeric(12,2), 
			@SPEED_CHARGE		numeric(12,2), 
			@RETURN_CHARGE		numeric(12,2), 
			@CASH_STD_CHARGE	numeric(12,2), 
			@SPEED_STD_CHARGE	numeric(12,2), 
			@CASH_VAT			numeric(8,2), 
			@SPEED_VAT			numeric(8,2), 
			@CITIANY_CHARGE		numeric(12,2), 
			@CITIANY_STD_CHARGE numeric(12,2), 
			@CITIANY_VAT		numeric(8,2), 
			@BILLING_TYPE		varchar(25),
			@Direct_Debit_Customer bit,
			@IS_DISABLE			bit,
			@INPUT_BY			varchar(20),
			@INPUT_DATETIME		datetime,
			@INPUT_FROM			varchar(30),
			@AUTH_BY			varchar(20),
			@AUTH_DATETIME		datetime,
			@AUTH_FROM			varchar(30),
			@LAST_MOD_NO		int,
			@IS_AUTH			bit,
			@EMAIL			    varchar(60),
			@GUARANTEED_CR_ACC	varchar(16),
			@GUARANTEED_CR_OFST_ACC	varchar(16);			
	
	DECLARE @ErrorVar1		int; 
			

	SET NOCOUNT ON;

	SELECT @STATUS = '';

	BEGIN TRANSACTION

	IF EXISTS(SELECT CLIENT_CODE from CLIENT_HIST 
			  WHERE CLIENT_CODE=@CLIENT_CODE AND MOD_NO=@MOD_NO)
		BEGIN
			SELECT @STATUS=[STATUS],@CLIENT_CODE=CLIENT_CODE, @ACC_NO=ACC_NO, 
				@ACC_NAME=ACC_NAME,@MAIL_ADD=MAIL_ADD,@CONTACT=CONTACT,
				@CASH_DAYS=CASH_DAYS, @SPEED_DAYS=SPEED_DAYS, 
				@CASH_CR_TYPE=CASH_CR_TYPE, @SPEED_CR_TYPE=SPEED_CR_TYPE,
				@CASH_CHARGE=CASH_CHARGE, @SPEED_CHARGE=SPEED_CHARGE, 
				@RETURN_CHARGE=RETURN_CHARGE, @CASH_STD_CHARGE=CASH_STD_CHARGE,
				@SPEED_STD_CHARGE=SPEED_STD_CHARGE, @CASH_VAT=CASH_VAT, 
				@SPEED_VAT=SPEED_VAT, @CITIANY_CHARGE=CITIANY_CHARGE, 
				@CITIANY_STD_CHARGE=CITIANY_STD_CHARGE, 
				@CITIANY_VAT=CITIANY_VAT, @BILLING_TYPE=BILLING_TYPE,
				@IS_DISABLE=IS_DISABLE,
				@INPUT_BY=INPUT_BY,	@INPUT_DATETIME=INPUT_DATETIME,
				@INPUT_FROM=INPUT_FROM,@IS_AUTH=IS_AUTH, @EMAIL=EMAIL, 
				@GUARANTEED_CR_ACC=GUARANTEED_CR_ACC ,@GUARANTEED_CR_OFST_ACC=GUARANTEED_CR_OFST_ACC, @Direct_Debit_Customer=Direct_Debit_Customer
				FROM CLIENT_HIST 
				WHERE CLIENT_CODE=@CLIENT_CODE AND MOD_NO=@MOD_NO;
			IF (@IS_AUTH = 1)
				BEGIN
					-- already authorized
					ROLLBACK TRANSACTION;
					RETURN 3;
				END;
			IF (@INPUT_BY = substring(suser_name(),charindex('\',suser_name())+1,20))
				BEGIN
					-- maker and checker same person
					ROLLBACK TRANSACTION;
					RETURN 5;
				END;
			IF (@INPUT_DATETIME <> @MOD_DATETIME)
				BEGIN
					-- Data hase been changed. Need notification
					ROLLBACK TRANSACTION;
					RETURN 7;
				END;			
		END;
	ELSE
		BEGIN			
			-- not exist
			ROLLBACK TRANSACTION;
			RETURN 4;
		END	;

	IF @MOD_NO > 1
		BEGIN	
		
			INSERT INTO CLIENT_HIST 
				SELECT CLIENT_CODE, ACC_NO, ACC_NAME, MAIL_ADD, CONTACT, CASH_DAYS, SPEED_DAYS, CASH_CR_TYPE, SPEED_CR_TYPE, CASH_CHARGE, SPEED_CHARGE, RETURN_CHARGE, CASH_STD_CHARGE, SPEED_STD_CHARGE, CASH_VAT, SPEED_VAT, CITIANY_CHARGE, CITIANY_STD_CHARGE, CITIANY_VAT, BILLING_TYPE, IS_DISABLE, INPUT_BY, INPUT_DATETIME, INPUT_FROM, AUTH_BY, AUTH_DATETIME, AUTH_FROM, MOD_NO, STATUS,1, EMAIL, GUARANTEED_CR_ACC, GUARANTEED_CR_OFST_ACC,Direct_Debit_Customer FROM CLIENT
				WHERE CLIENT_CODE=@CLIENT_CODE;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END


			UPDATE CLIENT_HIST
				SET [STATUS] = 'O' 
				WHERE CLIENT_CODE=@CLIENT_CODE 
				AND [STATUS] = 'L';

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			IF @STATUS='U'
				BEGIN
					SELECT @STATUS='L';
				END

			UPDATE CLIENT
				SET ACC_NO=@ACC_NO, 
				ACC_NAME=@ACC_NAME,MAIL_ADD=@MAIL_ADD,CONTACT=@CONTACT,
				CASH_DAYS=@CASH_DAYS, SPEED_DAYS=@SPEED_DAYS, 
				CASH_CR_TYPE=@CASH_CR_TYPE, SPEED_CR_TYPE=@SPEED_CR_TYPE,
				CASH_CHARGE=@CASH_CHARGE, SPEED_CHARGE=@SPEED_CHARGE, 
				RETURN_CHARGE=@RETURN_CHARGE, CASH_STD_CHARGE=@CASH_STD_CHARGE,
				SPEED_STD_CHARGE=@SPEED_STD_CHARGE, CASH_VAT=@CASH_VAT, 
				SPEED_VAT=@SPEED_VAT, CITIANY_CHARGE=@CITIANY_CHARGE, 
				CITIANY_STD_CHARGE=@CITIANY_STD_CHARGE, 
				CITIANY_VAT=@CITIANY_VAT, BILLING_TYPE=@BILLING_TYPE,
				IS_DISABLE=@IS_DISABLE,
				INPUT_BY=@INPUT_BY,	INPUT_DATETIME=@INPUT_DATETIME,
				INPUT_FROM=@INPUT_FROM,
				AUTH_BY=substring(suser_name(),charindex('\',suser_name())+1,20),
				AUTH_DATETIME=GETDATE(),AUTH_FROM=HOST_NAME(),
				MOD_NO=@MOD_NO,[STATUS]=@STATUS ,EMAIL=@EMAIL, 
				GUARANTEED_CR_ACC=@GUARANTEED_CR_ACC ,GUARANTEED_CR_OFST_ACC=@GUARANTEED_CR_OFST_ACC,Direct_Debit_Customer=@Direct_Debit_Customer
			WHERE CLIENT_CODE=@CLIENT_CODE;

			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END
			
			DELETE CLIENT_HIST WHERE CLIENT_CODE=@CLIENT_CODE
				AND IS_AUTH=0;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END	

		END
	ELSE -- first record
		BEGIN
			INSERT INTO CLIENT
				SELECT CLIENT_CODE, ACC_NO, ACC_NAME,MAIL_ADD,
					CONTACT, CASH_DAYS, SPEED_DAYS, CASH_CR_TYPE, SPEED_CR_TYPE,
					CASH_CHARGE, SPEED_CHARGE, RETURN_CHARGE, CASH_STD_CHARGE,
					SPEED_STD_CHARGE, CASH_VAT, SPEED_VAT, CITIANY_CHARGE, 
					CITIANY_STD_CHARGE, CITIANY_VAT, BILLING_TYPE,IS_DISABLE, 
					INPUT_BY, INPUT_DATETIME, INPUT_FROM,
					substring(suser_name(),charindex('\',suser_name())+1,20), 
					GETDATE(), HOST_NAME(), MOD_NO, 'L',EMAIL, 
				    GUARANTEED_CR_ACC ,GUARANTEED_CR_OFST_ACC,Direct_Debit_Customer 
					FROM CLIENT_HIST
					WHERE CLIENT_CODE=@CLIENT_CODE AND MOD_NO=@MOD_NO;
			
			SELECT @ErrorVar1 = @@error;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END

			DELETE CLIENT_HIST WHERE CLIENT_CODE=@CLIENT_CODE
				AND IS_AUTH=0;

			IF @ErrorVar1 <> 0
				BEGIN
					ROLLBACK TRANSACTION;
					RETURN 1;
				END			
					
		END

		COMMIT TRANSACTION
		
		SELECT @ErrorVar1 = @@error;
		
		IF @ErrorVar1 = 0
			BEGIN		
				RETURN 0;
			END
		ELSE
			BEGIN
				RETURN 1;
			END


	
    
END

