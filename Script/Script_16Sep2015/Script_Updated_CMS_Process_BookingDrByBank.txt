USE [CCMS]
GO
/****** Object:  StoredProcedure [dbo].[CMS_Process_BookingDrByBank]    Script Date: 16-Sep-15 10:29:12 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Iftekharul Alam Khan Lodi
-- Create date: 25-Feb-13
-- Modified by: Mohammad Yasir Arafat
-- Modify Date: 08 Sept 15
-- Description: Process for booking check by bank code
-- =============================================

ALTER PROCEDURE [dbo].[CMS_Process_BookingDrByBank]	
	@BANK_CODE		varchar(4),
	@SCHEDULE_DATE	datetime
AS
BEGIN	
	DECLARE @ErrorVar		INT,
			@vDS_CODE		varchar(12),
			@vSCHEDULE_DATE	datetime,
			@vAmount		numeric(14,2),
			@vLOCATION_NAME	varchar(350),
			@vACC_NO		varchar(16);

	
	SET NOCOUNT ON;

	DECLARE CURSORCASH CURSOR FOR
		(SELECT c.CUSTOMER_REF,ds.SCHEDULE_DATE,
			SUM(ds.CITICASH_AMOUNT) as total,'Deposit On '+CONVERT(varchar(10), ds.SCHEDULE_DATE, 20)+CONVERT(varchar(10), ds.SCHEDULE_DATE, 20)+'DS NO '+ds.D_CODE+'INV Code '+c.ADD_TEXT,b.ACC_NO
			FROM CLIENT cl,DSCHEDULE ds ,LOCATION l ,BANK b,DCOLLECTED dc, CCASH c 
			WHERE cl.CLIENT_CODE = ds.CLIENT_CODE
			AND cl.STATUS='L' 
			AND ds.CITICASH_AMOUNT>0	 
			AND ds.REF_NO IS NULL			
			AND l.LOCATION_CODE=ds.LOCATION_CODE 
			AND ds.CORR_BANK_CODE=b.bank_code
			AND ds.CORR_BANK_CODE=@BANK_CODE
			AND dc.DS_CODE=ds.DS_CODE
			AND dc.STATUS='L'
			AND cl.CASH_CR_TYPE='RD'
			AND c.D_CODE = ds.D_CODE
			GROUP BY ds.LOCATION_CODE,ds.SCHEDULE_DATE,ds.DS_CODE,l.LOCATION_NAME, 
			ds.CORR_BANK_CODE,b.ACC_NO,b.BANK_NAME,ds.CORR_BANK_CODE,c.CUSTOMER_REF,ds.D_CODE,c.ADD_TEXT)
			union
			(SELECT ds.D_CODE,ds.SCHEDULE_DATE,
			SUM(ds.CITICASH_AMOUNT) as total,l.LOCATION_NAME+CONVERT(varchar(10), ds.SCHEDULE_DATE, 20)+'DS NO '+'REF '+'INV Code '+c.ADD_TEXT,b.ACC_NO
			FROM CLIENT cl,DSCHEDULE ds ,LOCATION l ,BANK b,DCOLLECTED dc, CCASH c 
			WHERE cl.CLIENT_CODE = ds.CLIENT_CODE
			AND cl.STATUS='L' 
			AND ds.CITICASH_AMOUNT>0	 
			AND ds.REF_NO IS NULL			
			AND l.LOCATION_CODE=ds.LOCATION_CODE 
			AND ds.CORR_BANK_CODE=b.bank_code
			AND ds.CORR_BANK_CODE=@BANK_CODE
			AND dc.DS_CODE=ds.DS_CODE
			AND dc.STATUS='L'
			AND cl.CASH_CR_TYPE='D'
			AND c.D_CODE = ds.D_CODE
			GROUP BY ds.LOCATION_CODE,ds.SCHEDULE_DATE,ds.DS_CODE,l.LOCATION_NAME, 
			ds.CORR_BANK_CODE,b.ACC_NO,b.BANK_NAME,ds.CORR_BANK_CODE,c.CUSTOMER_REF,ds.D_CODE,c.ADD_TEXT,ds.REF_NO)
		

	OPEN CURSORCASH;
	FETCH NEXT FROM CURSORCASH 
        INTO @vDS_CODE,@vSCHEDULE_DATE,@vAmount,@vLOCATION_NAME,@vACC_NO;

	WHILE @@FETCH_STATUS=0 
 	BEGIN
		
		INSERT INTO TMP_DR_BOOKING(CRED_TYPE, SUNACC_NO, AMOUNT, REF_NO, VALUE_DATE,DAYS, REMARKS, DEP_TYP)
			VALUES('0',@vACC_NO,@vAmount,@vDS_CODE,
			@vSCHEDULE_DATE,
			'',@vLOCATION_NAME,'Cash');
		
		FETCH NEXT FROM CURSORCASH 
			INTO @vDS_CODE,@vSCHEDULE_DATE,@vAmount,@vLOCATION_NAME,@vACC_NO;
	END

	CLOSE CURSORCASH;
	DEALLOCATE CURSORCASH;
--2

	DECLARE CURSORSPEED CURSOR FOR
		(SELECT ch.CUSTOMER_REF,ds.SCHEDULE_DATE,
			SUM(ds.CITICHECK_AMOUNT) as total,l.LOCATION_NAME+CONVERT(varchar(10), ds.SCHEDULE_DATE, 20)+'DS NO'+ds.D_CODE+'INV Code '+cs.AddSlipText,b.ACC_NO
			FROM CLIENT cl,DSCHEDULE ds ,LOCATION l ,BANK b,DCOLLECTED dc, CSD_DET ch, CSD cs
			WHERE cl.CLIENT_CODE = ds.CLIENT_CODE
			AND cl.STATUS='L'
			AND ds.CITICHECK_AMOUNT>0 
			AND ds.REF_NO IS NULL
			AND l.LOCATION_CODE=ds.LOCATION_CODE 
			AND ds.CORR_BANK_CODE=b.bank_code
			AND ds.CORR_BANK_CODE= @BANK_CODE
			AND ds.SCHEDULE_DATE<=@SCHEDULE_DATE
			AND dc.DS_CODE=ds.DS_CODE
			AND dc.STATUS='L'
			AND cl.SPEED_CR_TYPE = 'RD'
			AND ch.D_CODE = ds.D_CODE
			AND cs.D_CODE = ds.D_CODE
			GROUP BY ds.LOCATION_CODE,ds.SCHEDULE_DATE,ds.DS_CODE,l.LOCATION_NAME, 
			ds.CORR_BANK_CODE,b.ACC_NO,b.BANK_NAME,ds.CORR_BANK_CODE,ch.CUSTOMER_REF,ds.D_CODE,cs.AddSlipText)
			union
		(SELECT ch.CHECK_REF,ds.SCHEDULE_DATE,
			SUM(ds.CITICHECK_AMOUNT) as total,l.LOCATION_NAME+CONVERT(varchar(10), ds.SCHEDULE_DATE, 20)+'DS NO '+ds.D_CODE+'Check No '+ch.CHECK_NO +'INV Code '+ch.AddCheckText,b.ACC_NO
			FROM CLIENT cl,DSCHEDULE ds ,LOCATION l ,BANK b,DCOLLECTED dc, CSD_DET ch, CSD cs
			WHERE cl.CLIENT_CODE = ds.CLIENT_CODE
			AND cl.STATUS='L'
			AND ds.CITICHECK_AMOUNT>0 
			AND ds.REF_NO IS NULL
			AND l.LOCATION_CODE=ds.LOCATION_CODE 
			AND ds.CORR_BANK_CODE=b.bank_code
			AND ds.CORR_BANK_CODE= @BANK_CODE
			AND ds.SCHEDULE_DATE<=@SCHEDULE_DATE
			AND dc.DS_CODE=ds.DS_CODE
			AND dc.STATUS='L'
			AND cl.SPEED_CR_TYPE = 'RC'
			AND ch.D_CODE = ds.D_CODE
			AND cs.D_CODE = ds.D_CODE
			GROUP BY ds.LOCATION_CODE,ds.SCHEDULE_DATE,ds.DS_CODE,l.LOCATION_NAME, 
			ds.CORR_BANK_CODE,b.ACC_NO,b.BANK_NAME,ds.CORR_BANK_CODE,ch.CHECK_REF,ds.D_CODE,ch.CHECK_NO,ch.AddCheckText)
			union
			(SELECT ds.D_CODE,ds.SCHEDULE_DATE,
			SUM(ds.CITICHECK_AMOUNT) as total,l.LOCATION_NAME+CONVERT(varchar(10), ds.SCHEDULE_DATE, 20)+'DS NO '+'REF '+'INV Code '+cs.AddSlipText,b.ACC_NO
			FROM CLIENT cl,DSCHEDULE ds ,LOCATION l ,BANK b,DCOLLECTED dc, CSD_DET ch, CSD cs
			WHERE cl.CLIENT_CODE = ds.CLIENT_CODE
			AND cl.STATUS='L'
			AND ds.CITICHECK_AMOUNT>0 
			AND ds.REF_NO IS NULL
			AND l.LOCATION_CODE=ds.LOCATION_CODE 
			AND ds.CORR_BANK_CODE=b.bank_code
			AND ds.CORR_BANK_CODE= @BANK_CODE
			AND ds.SCHEDULE_DATE<=@SCHEDULE_DATE
			AND dc.DS_CODE=ds.DS_CODE
			AND dc.STATUS='L'
			AND cl.SPEED_CR_TYPE = 'D'
			AND ch.D_CODE = ds.D_CODE
			AND cs.D_CODE = ds.D_CODE
			GROUP BY ds.LOCATION_CODE,ds.SCHEDULE_DATE,ds.DS_CODE,l.LOCATION_NAME, 
			ds.CORR_BANK_CODE,b.ACC_NO,b.BANK_NAME,ds.CORR_BANK_CODE,ds.D_CODE,ds.REF_NO,cs.AddSlipText)
			union
			(SELECT ch.CHECK_NO,ds.SCHEDULE_DATE,
			SUM(ds.CITICHECK_AMOUNT) as total,l.LOCATION_NAME+CONVERT(varchar(10), ds.SCHEDULE_DATE, 20)+'DS NO '+ds.D_CODE+'REF '+ch.CUSTOMER_REF+'INV Code '+ch.AddCheckText,b.ACC_NO
			FROM CLIENT cl,DSCHEDULE ds ,LOCATION l ,BANK b,DCOLLECTED dc, CSD_DET ch, CSD cs
			WHERE cl.CLIENT_CODE = ds.CLIENT_CODE
			AND cl.STATUS='L'
			AND ds.CITICHECK_AMOUNT>0 
			AND ds.REF_NO IS NULL
			AND l.LOCATION_CODE=ds.LOCATION_CODE 
			AND ds.CORR_BANK_CODE=b.bank_code
			AND ds.CORR_BANK_CODE= @BANK_CODE
			AND ds.SCHEDULE_DATE<=@SCHEDULE_DATE
			AND dc.DS_CODE=ds.DS_CODE
			AND dc.STATUS='L'
			AND cl.SPEED_CR_TYPE = 'C'
			AND ch.D_CODE = ds.D_CODE
			AND cs.D_CODE = ds.D_CODE
			GROUP BY ds.LOCATION_CODE,ds.SCHEDULE_DATE,ds.DS_CODE,l.LOCATION_NAME, 
			ds.CORR_BANK_CODE,b.ACC_NO,b.BANK_NAME,ds.CORR_BANK_CODE,ch.CHECK_NO,ds.D_CODE,ch.CUSTOMER_REF,ch.AddCheckText)

	OPEN CURSORSPEED;
	FETCH NEXT FROM CURSORSPEED 
        INTO @vDS_CODE,@vSCHEDULE_DATE,@vAmount,@vLOCATION_NAME,@vACC_NO;

	WHILE @@FETCH_STATUS=0 
 	BEGIN
		
		INSERT INTO TMP_DR_BOOKING(CRED_TYPE, SUNACC_NO, AMOUNT, REF_NO, VALUE_DATE,DAYS, REMARKS, DEP_TYP)
			VALUES('0',@vACC_NO,@vAmount,@vDS_CODE,
			@vSCHEDULE_DATE,
			'',@vLOCATION_NAME,'Check');
			

		FETCH NEXT FROM CURSORSPEED 
			INTO @vDS_CODE,@vSCHEDULE_DATE,@vAmount,@vLOCATION_NAME,@vACC_NO;
	END

	CLOSE CURSORSPEED;
	DEALLOCATE CURSORSPEED;

	
END

